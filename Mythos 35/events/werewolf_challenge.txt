namespace = CHALLENGE

# Events related to the werewolf chalenge decision.
# So big it gets its own file

# Challenger is the person issuing the initial challenge
# Challenged Party is the person whose title is being fought over
# Defending Party is the person in opposition to the challenger.  This is usually the challenged party, but may be a second challenger if the challenged party can't fight
# Champion is the person fighting against the challenger.  This is usually the Challenged Party, unless they are a child, or a second challenger is the defending party
# Challenged Title is the title being fought over

# CHALLENGE.1 - Control the initial start of the challenge.  A few different twists depending on the nature of the challenge
character_event = {
	id = CHALLENGE.1
	#desc = EVTDESC_CHALLENGE.1
	desc = {
		text = EVTDESCA_CHALLENGE.1
		# Challenged ruler is incapable
		trigger = {
			trait = incapable
		}
	}
	desc = {
		text = EVTDESCB_CHALLENGE.1
		# Challenged ruler is a tyrant
		trigger = {
			NOT = { trait = incapable }
			NOR = {
				has_law = werewolf_law_1
				has_law = werewolf_law_2
				has_law = werewolf_law_3
				has_law = werewolf_law_4
			}
			OR = {
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tyrant }
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_evil_tyrant }
			}
		}
	}
	desc = {
		text = EVTDESCC_CHALLENGE.1
		# Challenged ruler is infamous
		trigger = {
			NOT = { trait = incapable }
			NOR = {
				has_law = werewolf_law_1
				has_law = werewolf_law_2
				has_law = werewolf_law_3
				has_law = werewolf_law_4
			}
			NOT = { prestige = 0 }
		}
	}
	desc = {
		text = EVTDESCD_CHALLENGE.1
		# Challenged ruler is Inbred
		trigger = {
			NOT = { trait = incapable }
			NOR = {
				has_law = werewolf_law_3
				has_law = werewolf_law_4
			}
			trait = inbred
			NOR = {
				AND = {
					religion = zoroastrian
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				AND = {
					religion = messalian
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				AND = {
					religion = atenist
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				AND = {
					religion = kemetic_pagan_reformed
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				AND = {
					religion = kemetic_pagan
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				OR = {
					has_religion_feature = religion_holy_family
					has_religion_feature = religion_feature_zun
				}
			}
		}
	}
	desc = {
		text = EVTDESCE_CHALLENGE.1
		# Challenged ruler is deformed
		trigger = {
			NOT = { trait = incapable }
			can_challenge_genetic = yes
		}
	}
	desc = {
		text = EVTDESCF_CHALLENGE.1
		# Challenged ruler is a dwarf
		trigger = {
			NOT = { trait = incapable }
			NOR = {
				has_law = werewolf_law_3
				has_law = werewolf_law_4
			}
			trait = dwarf
		}
	}
	desc = {
		text = EVTDESCG_CHALLENGE.1
		# Challenged ruler is weak
		trigger = {
			NOT = { trait = incapable }
			can_challenge_weak = yes
		}
	}
	desc = {
		text = EVTDESCH_CHALLENGE.1
		# Challenged ruler is female
		trigger = {
			NOT = { trait = incapable }
			can_challenge_female = yes
		}
	}
	desc = {
		text = EVTDESCI_CHALLENGE.1
		# Challenged ruler is male
		trigger = {
			NOT = { trait = incapable }
			can_challenge_male = yes
		}
	}
	desc = {
		text = EVTDESCJ_CHALLENGE.1
		# Challenged ruler is new
		trigger = {
			NOT = { trait = incapable }
			can_challenge_new_ruler = yes
		}
	}
	desc = {
		text = EVTDESCK_CHALLENGE.1
		# Challenged ruler is a child. No above reasons apply
		trigger = {
			NOT = { trait = incapable }
			can_challenge_infamy = no
			can_challenge_genetic = no
			can_challenge_weak = no
			can_challenge_female = no
			can_challenge_male = no
			can_challenge_new_ruler = no
			can_challenge_child = yes
		}
	}
	desc = {
		text = EVTDESCL_CHALLENGE.1
		# Challenged ruler is a non-werewolf. No above reasons apply
		trigger = {
			NOT = { trait = incapable }
			can_challenge_infamy = no
			can_challenge_genetic = no
			can_challenge_weak = no
			can_challenge_female = no
			can_challenge_male = no
			can_challenge_new_ruler = no
			can_challenge_child = no
			NOT = { trait = known_werewolf }
		}
	}
	desc = {
		text = EVTDESCM_CHALLENGE.1
		# Challenged ruler is a foreigner. No above reasons apply
		trigger = {
			NOT = { trait = incapable }
			can_challenge_infamy = no
			can_challenge_genetic = no
			can_challenge_weak = no
			can_challenge_female = no
			can_challenge_male = no
			can_challenge_new_ruler = no
			can_challenge_child = no
			trait = known_werewolf
			NOT = { culture = werewolf_culture }
		}
	}
	desc = {
		text = EVTDESC_CHALLENGE.1
		# Fallback
		trigger = {
			NOT = { trait = incapable }
			can_challenge_infamy = no
			can_challenge_genetic = no
			can_challenge_weak = no
			can_challenge_female = no
			can_challenge_male = no
			can_challenge_new_ruler = no
			can_challenge_child = no
			trait = known_werewolf
			culture = werewolf_culture
		}
	}
	picture = GFX_evt_poke_king_in_chest
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		log = "[From.GetTitledName] is challenging [Root.GetTitledName]"
		# First, remember who our characters are
		# Currently, Liege is ROOT. Liege is the challenged party
		save_event_target_as = challenged_party
		# From is the challenger
		FROM = { save_event_target_as = challenger }
		
		# Save the title being fought over
		primary_title = {
			save_event_target_as = challenged_title
		}
		
		# Is the leige incapable? They can't fight, just get fought over - Incapable now gets a champion
		if = {
			limit = { is_incapable = yes }
			character_event = { id = CHALLENGE.8 days = 1 }
		}
		
		# Is the liege a child? They need a champion
		if = {
			limit = { NOT = { age = 16 } }
			character_event = { id = CHALLENGE.8 days = 1 }
			break = yes
		}
		
		# You are a capable adult.  You are your own champion, and the defending party
		save_event_target_as = champion
		set_character_flag = defending_party
		
		# Is this a challenge just over culture or known werewolf status?
		if = {
			limit = { 
				trigger_minor_challenge = yes
				trait = werewolf # Needs this, or you can't reveal yourself as a werewolf
			}
			
			# Both culture and status
			if = {
				limit = {
					NAND = {
						culture = werewolf_culture
						trait = known_werewolf
					}
				}
				character_event = { id = CHALLENGE.4 days = 1 }
				break = yes
			}
			
			# Just culture
			if = {
				limit = { NOT = { culture = werewolf_culture } }
				character_event = { id = CHALLENGE.2 days = 1 }
				break = yes
			}
			
			# Just status
			if = {
				limit = { NOT = { trait = known_werewolf } }
				character_event = { id = CHALLENGE.3 days = 1 }
				break = yes
			}
		}
		
		# Looks like everything is set
		character_event = { id = CHALLENGE.19 days = 1 }
	}
	
	option = {
		trigger = {
			NOT = { trait = craven }
			is_incapable = no
		}
		name = EVTOPTA_CHALLENGE.1
	}
	option = {
		trigger = { 
			trait = craven
			is_incapable = no
		}
		name = EVTOPTB_CHALLENGE.1
	}
	option = {
		trigger = {
			is_incapable = yes
		}
		name = EVTOPTC_CHALLENGE.1
	}
}

# CHALLENGE.2 - Option to convert culture
character_event = {
	id = CHALLENGE.2
	desc = EVTDESC_CHALLENGE.2
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Convert culture
	option = {
		name = EVTOPTA_CHALLENGE.2
		culture = werewolf_culture
		hidden_tooltip = {
			event_target:challenger = {
				character_event = { id = CHALLENGE.5 }
			}
		}
		ai_chance = {
			factor = 3
			modifier = {
				factor = 1.3
				trait = patient
			}
			modifier = {
				factor = 1.2
				trait = humble
			}
		}
	}
	
	# Refuse to convert
	option = {
		name = EVTOPTB_CHALLENGE.2
		character_event = { id = CHALLENGE.19 days = 2 tooltip = TT_challenge_continue }
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1.5
				trait = zealous
			}
			modifier = {
				factor = 6
				trait = stubborn
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
}

# CHALLENGE.3 - Option to reveal as a werewolf
character_event = {
	id = CHALLENGE.3
	desc = EVTDESC_CHALLENGE.3
	picture = GFX_evt_throne_room
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Reveal yourself as a werewolf
	option = {
		name = EVTOPTA_CHALLENGE.3
		add_trait = known_werewolf
		prestige = 20
		hidden_tooltip = {
			remove_trait = secret_werewolf
			remove_character_modifier = known_monster
			event_target:challenger = {
				character_event = { id = CHALLENGE.6 }
			}
		}
	}
	
	# Stay hidden
	option = {
		trigger = { ai = no }
		name = EVTOPTB_CHALLENGE.3
		character_event = { id = CHALLENGE.19 days = 2 tooltip = TT_challenge_continue }
	}
}

# CHALLENGE.4 - Change culture and reveal as a werewolf
character_event = {
	id = CHALLENGE.4
	desc = EVTDESC_CHALLENGE.4
	picture = GFX_evt_werewolf_moon
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Adapt
	option = {
		name = EVTOPTA_CHALLENGE.4
		culture = werewolf_culture
		add_trait = known_werewolf
		prestige = 20
		hidden_tooltip = {
			remove_trait = secret_werewolf
			remove_character_modifier = known_monster
			event_target:challenger = {
				character_event = { id = CHALLENGE.7 }
			}
		}
	}
	
	# Stay hidden
	option = {
		trigger = { ai = no }
		name = EVTOPTB_CHALLENGE.4
		character_event = { id = CHALLENGE.19 days = 2 tooltip = TT_challenge_continue }
	}
}

# CHALLENGE.5 - Liege adopted werewolf culture
character_event = {
	id = CHALLENGE.5
	desc = EVTDESC_CHALLENGE.5
	picture = GFX_evt_werewolf_moon
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.5
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[Root.GetTitledName]'s challenge aborted due to [challenged_party.GetTitledName] changing culture."
		hidden_tooltip = {
			event_target:challenged_party = {
				remove_character_modifier = facing_challenge
			}
			remove_character_modifier = facing_challenge
		}
	}
}

# CHALLENGE.6 - Liege revealed as werewolf
character_event = {
	id = CHALLENGE.6
	desc = EVTDESC_CHALLENGE.6
	picture = GFX_evt_werewolf_moon
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.6
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[Root.GetTitledName]'s challenge aborted due to [challenged_party.GetTitledName] revealing [challenged_party.GetHerselfHimself] as a werewolf."
		hidden_tooltip = {
			event_target:challenged_party = {
				remove_character_modifier = facing_challenge
			}
			remove_character_modifier = facing_challenge
		}
	}
}

# CHALLENGE.7 - Liege revealed as werewolf and adopts werewolf culture
character_event = {
	id = CHALLENGE.7
	desc = EVTDESC_CHALLENGE.7
	picture = GFX_evt_werewolf_moon
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.7
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[Root.GetTitledName]'s challenge aborted due to [challenged_party.GetTitledName] changing culture and revealing."
		hidden_tooltip = {
			event_target:challenged_party = {
				remove_character_modifier = facing_challenge
			}
			remove_character_modifier = facing_challenge
		}
	}
}

# CHALLENGE.8 - Child/incapable challenged, needs champion
character_event = {
	id = CHALLENGE.8
	desc = EVTDESC_CHALLENGE.8
	picture = GFX_evt_child_sword
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	show_from_from = yes
	
	immediate = {
		if = {
			limit = {
				has_assigned_minor_title = title_champion
				OR = {
					any_courtier = {
						has_minor_title = title_champion
						is_incapable = no
						prisoner = no
					}
					any_vassal = {
						has_minor_title = title_champion
						is_incapable = no
						prisoner = no
					}
				}
			}
			any_courtier = {
				limit = {
					has_minor_title = title_champion
					is_incapable = no
					prisoner = no
					NOT = { has_character_flag = facing_challenge }
				}
				character_event = { id = CHALLENGE.89 days = 1 }
			}
			any_vassal = {
				limit = {
					has_minor_title = title_champion
					is_incapable = no
					prisoner = no
					NOT = { has_character_flag = facing_challenge }
				}
				character_event = { id = CHALLENGE.89 days = 1 }
			}
			set_character_flag = ask_champion
			set_character_flag = asked_champion
		}
		else_if = {
			limit = { 
				has_assigned_minor_title = title_regent
				regent = { 
					is_incapable = no
					prisoner = no
					NOT = { has_character_flag = facing_challenge }
				}
			}
			regent = { character_event = { id = CHALLENGE.9 days = 1 } }
			set_character_flag = ask_regent
			set_character_flag = asked_champion
			break = yes
		}
		else_if = {
			limit = {
				father = {
					same_realm = ROOT
					is_incapable = no
					prisoner = no
					NOT = { has_character_flag = facing_challenge }
				}
				NOT = { age = 16 }
			}
			father = { character_event = { id = CHALLENGE.10 days = 1 } }
			set_character_flag = ask_father
			set_character_flag = asked_champion
			break = yes
		}
		else_if = {
			limit = {
				mother = {
					same_realm = ROOT
					is_incapable = no
					prisoner = no
					NOT = { has_character_flag = facing_challenge }
				}
				NOT = { age = 16 }
			}
			mother = { character_event = { id = CHALLENGE.11 days = 1 } }
			set_character_flag = ask_mother
			set_character_flag = asked_champion
			break = yes
		}
		set_character_flag = no_champion
	}
	
	option = {
		name = EVTOPTE_CHALLENGE.8
		trigger = { has_character_flag = ask_champion }
		hidden_tooltip = {
			clr_character_flag = ask_champion
		}
	}
	option = {
		name = EVTOPTA_CHALLENGE.8
		# Should always use this under normal rules. Other options available if child regency is off
		trigger = { has_character_flag = ask_regent }
		hidden_tooltip = {
			clr_character_flag = ask_regent
		}
	}
	option = {
		name = EVTOPTB_CHALLENGE.8
		trigger = { has_character_flag = ask_father }
		hidden_tooltip = {
			clr_character_flag = ask_father
		}
	}
	option = {
		name = EVTOPTC_CHALLENGE.8
		trigger = { has_character_flag = ask_mother }
		hidden_tooltip = {
			clr_character_flag = ask_mother
		}
	}
	option = {
		name = EVTOPTD_CHALLENGE.8
		trigger = { has_character_flag = no_champion }
		hidden_tooltip = {
			clr_character_flag = no_champion
			clr_character_flag = asked_champion
		}
	}
}

# CHALLENGE.9 - Regent is asked to be champion
character_event = {
	id = CHALLENGE.9
	desc = EVTDESC_CHALLENGE.9
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	hide_from = yes
	
	# Become champion
	option = {
		name = EVTOPTA_CHALLENGE.9
		log = "[Root.GetTitledName] will champion for [challenged_party.GetTitledName]."
		custom_tooltip = { text = TT_champion_liege }
		hidden_tooltip = {
			add_character_modifier = { name = facing_challenge months = 3 }
			save_event_target_as = champion
			event_target:challenged_party = { 
				set_character_flag = defending_party
				clr_character_flag = asked_champion
				character_event = { id = CHALLENGE.24 days = 1 }
			}
		}
		ai_chance = {
			factor = 20
			additive_opinion_modifier = {
				factor = 0.5
				who = liege
			}
			modifier = {
				factor = 1.5
				ai_honor = 40
			}
			modifier = {
				factor = 1.5
				ai_honor = 80
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				health = 10
			}
			modifier = {
				factor = 2
				combat_rating = 5
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				father = { 
					same_realm = PREV
					is_incapable = no
					prisoner = no
					NOT = { has_character_modifier = facing_challenge }
				}
				NOT = { age = 16 }
			}
		}
		name = EVTOPTB_CHALLENGE.9
		liege = { father = { character_event = { id = CHALLENGE.10 days = 1 } } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				father = { 
					OR = {
						NOT = { same_realm = PREV }
						is_incapable = yes
						prisoner = yes
						has_character_modifier = facing_challenge
					}
				}
				mother = { 
					same_realm = PREV
					NOT = { has_character_modifier = facing_challenge }
				}
				NOT = { age = 16 }
			}
		}
		name = EVTOPTC_CHALLENGE.9
		liege = { mother = { character_event = { id = CHALLENGE.11 days = 1 } } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				OR = {
					AND = {
						father = { 
							OR = {
								NOT = { same_realm = PREV }
								is_incapable = yes
								prisoner = yes
								has_character_modifier = facing_challenge
							}
						}
						mother = { 
							OR = {
								NOT = { same_realm = PREV }
								is_incapable = yes
								prisoner = yes
								has_character_modifier = facing_challenge
							}
						}
					}
					NOT = { age = 16 }
				}
			}
		}
		name = EVTOPTD_CHALLENGE.9
		hidden_tooltip = {
			liege = { character_event = { id = CHALLENGE.11 days = 1 } }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
}

# CHALLENGE.10 - Father is asked to be champion
character_event = {
	id = CHALLENGE.10
	desc = EVTDESC_CHALLENGE.10
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	hide_from = yes
	
	# Become champion
	option = {
		name = EVTOPTA_CHALLENGE.9
		log = "[Root.GetTitledName] will champion for [challenged_party.GetTitledName]."
		custom_tooltip = { text = TT_champion_liege }
		hidden_tooltip = {
			save_event_target_as = champion
			event_target:challenged_party = {
				add_character_modifier = { name = facing_challenge months = 3 }
				set_character_flag = defending_party
				clr_character_flag = asked_champion
				character_event = { id = CHALLENGE.24 days = 1 }
			}
		}
		ai_chance = {
			factor = 20
			additive_opinion_modifier = {
				factor = 0.5
				who = event_target:challenged_party
			}
			modifier = {
				factor = 1.5
				ai_honor = 40
			}
			modifier = {
				factor = 1.5
				ai_honor = 80
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				health = 10
			}
			modifier = {
				factor = 2
				combat_rating = 5
			}
		}
	}
		
	option = {
		trigger = {
			event_target:challenged_party = {
				mother = { 
					same_realm = PREV
					is_incapable = no
					prisoner = no
					NOT = { has_character_modifier = facing_challenge }
				}
			}
		}
		name = EVTOPTC_CHALLENGE.9
		event_target:challenged_party = { mother = { character_event = { id = CHALLENGE.11 days = 1 } } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			event_target:challenged_party = {
				mother = { 
					OR = {
						NOT = { same_realm = PREV }
						is_incapable = yes
						prisoner = yes
						has_character_modifier = facing_challenge
					}
				}
			}
		}
		name = EVTOPTD_CHALLENGE.9
		hidden_tooltip = {
			event_target:challenged_party = { character_event = { id = CHALLENGE.11 days = 1 } }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
}

# CHALLENGE.11 - Mother is asked to be champion
character_event = {
	id = CHALLENGE.11
	desc = EVTDESC_CHALLENGE.10
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	hide_from = yes
	
	# Become champion
	option = {
		name = EVTOPTA_CHALLENGE.9
		log = "[Root.GetTitledName] will champion for [challenged_party.GetTitledName]."
		custom_tooltip = { text = TT_champion_liege }
		hidden_tooltip = {
			add_character_modifier = { name = facing_challenge months = 3 }
			save_event_target_as = champion
			event_target:challenged_party = { 
				set_character_flag = defending_party
				clr_character_flag = asked_champion
				character_event = { id = CHALLENGE.24 days = 1 }
			}
		}
		ai_chance = {
			factor = 20
			additive_opinion_modifier = {
				factor = 0.5
				who = event_target:challenged_party
			}
			modifier = {
				factor = 1.5
				ai_honor = 40
			}
			modifier = {
				factor = 1.5
				ai_honor = 80
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				health = 10
			}
			modifier = {
				factor = 2
				combat_rating = 5
			}
		}
	}
	
	option = {
		name = EVTOPTD_CHALLENGE.9
		hidden_tooltip = {
			event_target:challenged_party = { character_event = { id = CHALLENGE.12 days = 1 } }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
}

# CHALLENGE.12 - Incapable ruler or undefended child
character_event = {
	id = CHALLENGE.12
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		log = "[Root.GetTitledName] is not able to defend."
		# Alert the challenged character.  Exact message handled by flags already set
		character_event = { id = CHALLENGE.22 days = 1 }
		
		# Management event to set up challengers for the claim
		character_event = { id = CHALLENGE.13 days = 1 }
	}
}

# CHALLENGE.13 - Set up possible challengers
character_event = {
	id = CHALLENGE.13
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# Who can challenge
		any_vassal = {
			limit = {
				culture = werewolf_culture
				prisoner = no
				is_incapable = no
				trait = known_werewolf
				age = 16
				NOT = {character = event_target:challenger }
			}
			character_event = { id = CHALLENGE.15 days = 1 }
		}
		
		# Manager to determine best challenger
		character_event = { id = CHALLENGE.14 days = 3 }
	}
}

# CHALLENGE.14 - Determine best challenger
character_event = {
	id = CHALLENGE.14
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				NOT = {
					any_vassal = {
						has_character_flag = counterchallenge
						count = 1
					}
				}
			}
			# Challenger is unopposed
			event_target:challenger = { character_event = { id = CHALLENGE.17 days = 1} }
			break = yes
		}
		if = {
			limit = {
				any_vassal = {
					has_character_flag = counterchallenge
					count = 1
				}
				NOT = {
					any_vassal = {
						has_character_flag = counterchallenge
						count = 2
					}
				}
			}
			# exactly one counter-challenge - they are the opposition
			any_vassal = {
				limit = { has_character_flag = counterchallenge }
				add_character_modifier = { name = facing_challenge months = 3 }
				save_event_target_as = champion
				set_character_flag = defending_party
			}
		}
		if = {
			limit = {
				any_vassal = {
					has_character_flag = counterchallenge
					count = 2
				}
			}
			# Multiple people accepted.  We need to determine who is the most fit
			# When they accepted, we set a fitness score, and a global_best_fitness to see who was best
			any_vassal = {
				limit = {
					has_character_flag = counterchallenge
					is_variable_equal = { which = fitness which = global_best_fitness }
				}
				add_character_modifier = { name = facing_challenge months = 3 }
				save_event_target_as = champion
				set_character_flag = defending_party
			}
			
			# Alert the losers that the elders selected someone else
			any_vassal = {
				limit = {
					has_character_flag = counterchallenge
					NOT = { has_character_flag = defending_party }
				}
				character_event = { id = CHALLENGE.28 days = 1 }
			}
		}
		
		# Alert the selected party
		event_target:champion = {
			character_event = { id = CHALLENGE.27 days = 1 }
		}
		
		# Clean up our variables
		any_vassal = {
			clr_character_flag = counterchallenge
			set_variable = { which = fitness value = 0 }
		}
		set_variable = { which = global_best_fitness value = 0 }
		
		# Prepare the challenge
		character_event = { id = CHALLENGE.19 days = 3 }
	}
}

# CHALLENGE.15 - Challenge is uncontested - throw your hat into the ring?
character_event = {
	id = CHALLENGE.15
	desc = EVTDESC_CHALLENGE.15
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Go for it!
	option = {
		trigger = { NOT = { has_character_flag = facing_challenge } }
		name = EVTOPTA_CHALLENGE.15
		custom_tooltip = { text = TT_challenge_challenger }
		hidden_tooltip = {
			# Evaluate fitness to rule
			set_werewolf_fitness = yes
			# If this is the highest, save it
			if = {
				limit = { check_variable = { which = fitness which = global_best_fitness } }
				set_variable = { which = global_best_fitness which = fitness }
			}
			set_character_flag = counterchallenge
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 0
				trait = excommunicated
			}
			modifier = {
				factor = 0
				trait = horse
			}
			modifier = {
				factor = 2
				ai_ambition = 25
			}
			modifier = {
				factor = 2
				ai_ambition = 50
			}
			modifier = {
				factor = 2
				ai_ambition = 75
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 1.5
				is_heir = yes
			}
			modifier = {
				factor = 1.5
				ai_greed = 25
			}
			modifier = {
				factor = 1.5
				ai_greed = 50
			}
			modifier = {
				factor = 1.5
				ai_greed = 75
			}
		}
	}
	
	option = {
		name = EVTOPTB_CHALLENGE.15
		ai_chance = {
			factor = 1
			modifier = {
				factor = 10
				trait = craven
			}
			modifier = {
				factor = 3
				NOT = { combat_rating = 2 }
			}
			modifier = {
				factor = 3
				NOT = { health = 5 }
			}
			modifier = {
				factor = 4
				trait = depressed
			}
			modifier = {
				factor = 3
				trait = shy
			}
		}
	}
}

# CHALLENGE.16 - Support via favor
letter_event = {
	id = CHALLENGE.16
	desc = EVTDESC_CHALLENGE.16
	is_triggered_only = yes
	
	ai = no # Don't bother sending informational events to ai. Favor already removed from other end
	
	option = {
		name = EVTOPTA_CHALLENGE.16
		remove_favor = FROM
	}
}

# CHALLENGE.17 - Challenge is unopposed
character_event = {
	id = CHALLENGE.17
	desc = EVTDESC_CHALLENGE.17
	picture = GFX_evt_powerful_ruler
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.17
		event_target:challenged_title = {
			usurp_title = ROOT
		}
		prestige = 200
		hidden_tooltip = {
			event_target:challenged_party = {
				remove_character_modifier = facing_challenge
			}
			event_target:challenger = {
				remove_character_modifier = facing_challenge
			}
			clr_global_flag = ongoing_werewolf_challenge
		}
	}
}

# CHALLENGE.18 - Inform the Champion of liege support, and copy number of supporters
character_event = {
	id = CHALLENGE.18
	desc = {
		trigger = {
			event_target:challenged_party = {
				check_variable = { which = supporters which = event_target:challenger }
			}
		}
		text = EVTDESCA_CHALLENGE.18
		picture = GFX_evt_council_agreement
	}
	desc = {
		trigger = {
			event_target:challenged_party = {
				NOT = { check_variable = { which = supporters which = event_target:challenger } }
			}
		}
		text = EVTDESCB_CHALLENGE.18
		picture = GFX_evt_council_quarrelling
	}
	picture = GFX_evt_council
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		set_variable = { which = supporters which = event_target:challenged_party }
	}
	
	option = {
		trigger = {
			check_variable = { which = supporters which = event_target:challenger }
		}
		name = EVTOPTA_CHALLENGE.18
	}
	
	option = {
		trigger = {
			NOT = { check_variable = { which = support which = event_target:challenger } }
		}
		name = EVTOPTB_CHALLENGE.18
	}
}

# CHALLENGE.19 - All the roles are set.  Inform people, and let vassal pick who to support
character_event = {
	id = CHALLENGE.19
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# If crashing keeps happening, try commenting out vassal support
		# If facing your original opponent (or their champion), receive this alert
		if = {
			limit = {
				event_target:challenged_party = {
					has_character_flag = defending_party
				}
			}
			event_target:challenger = { character_event = { id = CHALLENGE.23 days = 1 } }
		}
		# If facing someone else over an undefended title, get this event
		if = {
			limit = {
				event_target:challenged_party = {
					NOT = { has_character_flag = defending_party }
				}
			}
			event_target:challenger = { character_event = { id = CHALLENGE.26 days = 1 } }
		}
		
		# Clear any old support info, just in case
		event_target:challenged_party = { set_variable = { which = supporters value = 0 } }
		event_target:challenger = { set_variable = { which = supporters value = 0 } }
		event_target:champion = { set_variable = { which = supporters value = 0 } }
		
		# Alert vassals to choose who to support
		event_target:challenged_party = {
			any_vassal = {
				limit = {
					is_incapable = no
					prisoner = no
					NOR = {
						character = event_target:challenger
						character = event_target:challenged_party
						character = event_target:champion
					}
				}
				character_event = { id = CHALLENGE.20 days = 1 }
			}
		}
		
		# Alert combatants of their support
		event_target:challenger = { character_event = { id = CHALLENGE.21 days = 5 } }
		if = {
			limit = {
				event_target:champion = { has_character_flag = defending_party }
			}
			event_target:champion = { character_event = { id = CHALLENGE.21 days = 5 } }
		}
		else = {
			event_target:challenged_party = { character_event = { id = CHALLENGE.21 days = 5 } }
			event_target:champion = { character_event = { id = CHALLENGE.18 days = 5 } }
		}
		
		# Start the fight
		character_event = { id = CHALLENGE.27 days = 9 }
		
		# Emergency abort if someone died
		if = {
			limit = {
				NOR = {
					event_target:challenged_party = { always = yes }
					event_target:champion = { always = yes }
					event_target:challenger = { always = yes }
				}
			}
			event_target:challenged_party = { character_event = { id = CHALLENGE.25 } }
			event_target:champion = { character_event = { id = CHALLENGE.25 } }
			event_target:challenger = { character_event = { id = CHALLENGE.25 } }
		}
	}
}

# CHALLENGE.20 - Vassals notified of battle and select who to support
character_event = {
	id = CHALLENGE.20
	# Challenger vs Liege
	desc = {
		trigger = {
			event_target:challenged_party = {
				has_character_flag = defending_party
				character = event_target:champion
			}
		}
		text = EVTDESCA_CHALLENGE.20
	}
	# Challenger vs Champion
	desc = {
		trigger = {
			event_target:challenged_party = {
				has_character_flag = defending_party
				NOT = { character = event_target:champion }
			}
		}
		text = EVTDESCB_CHALLENGE.20
	}
	# Challenger vs Challenger
	desc = {
		trigger = {
			event_target:challenged_party = {
				NOT = { has_character_flag = defending_party }
			}
		}
		text = EVTDESCC_CHALLENGE.20
	}
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		# Check if you are forced to support someone
		if = {
			limit = { 
				event_target:challenged_party = {
					has_character_flag = defending_party
				}
				owes_favor_to = event_target:challenged_party
			}
			set_character_flag = forced_support_defender
		}
		else_if = {
			limit = {
				event_target:challenged_party = {
					NOT = { has_character_flag = defending_party }
				}
				owes_favor_to = event_target:champion
			}
			set_character_flag = forced_support_defender
		}
		if = {
			limit = { owes_favor_to = event_target:challenger }
			set_character_flag = forced_support_challenger
		}
		# Can't be forced to do both
		if = {
			limit = {
				has_character_flag = forced_support_defender
				has_character_flag = forced_support_challenger
			}
			clr_character_flag = forced_support_defender
			clr_character_flag = forced_support_challenger
		}
	}
	
	# Support the defender (challenged_party)
	option = {
		trigger = {
			NOT = { has_character_flag = forced_support_challenger }
			event_target:challenged_party = { has_character_flag = defending_party }
		}
		name = EVTOPTA_CHALLENGE.20
		reverse_opinion = { modifier = opinion_supported_challenge who = event_target:challenged_party years = 5 }
		hidden_tooltip = {
			event_target:challenged_party = {
				change_variable = { which = supporters value = 1 }
			}
		}
		reverse_opinion = { modifier = opinion_opposed_challenge who = event_target:challenger years = 5 }
		if = {
			limit = { has_character_flag = forced_support_defender }
			custom_tooltip = { text = TT_defender_challenger_favor }
			hidden_tooltip = {
				clr_character_flag = forced_support_defender
				reverse_remove_favor = event_target:challenged_party
				event_target:challenged_party = {
					letter_event = { id = CHALLENGE.16 }
				}
			}
		}
		ai_chance = {
			factor = 10
			additive_opinion_modifier = {
				factor = 0.7
				who = event_target:challenged_party
			}
		}
	}
	
	# Support the defender (champion)
	option = {
		trigger = {
			NOT = { has_character_flag = forced_support_challenger }
			NOT = { event_target:challenged_party = { has_character_flag = defending_party } }
		}
		name = EVTOPTD_CHALLENGE.20
		reverse_opinion = { modifier = opinion_supported_challenge who = event_target:champion years = 5 }
		hidden_tooltip = {
			event_target:champion = {
				change_variable = { which = supporters value = 1 }
			}
		}
		reverse_opinion = { modifier = opinion_opposed_challenge who = event_target:challenger years = 5 }
		if = {
			limit = { has_character_flag = forced_support_defender }
			custom_tooltip = { text = TT_defender_champion_favor }
			hidden_tooltip = {
			clr_character_flag = forced_support_defender
				reverse_remove_favor = event_target:champion
				event_target:champion = {
					letter_event = { id = CHALLENGE.16 }
				}
			}
		}
		ai_chance = {
			factor = 10
			additive_opinion_modifier = {
				factor = 0.7
				who = event_target:champion
			}
		}
	}
	
	# Support the challenger
	option = {
		trigger = { NOT = { has_character_flag = forced_support_challenger } }
		name = EVTOPTB_CHALLENGE.20
		if = {
			limit = {
				event_target:challenged_party = { has_character_flag = defending_party }
			}
			reverse_opinion = { modifier = opinion_opposed_challenge who = event_target:challenged_party years = 5 }
		}
		else = {
			reverse_opinion = { modifier = opinion_opposed_challenge who = event_target:champion years = 5 }
		}
		reverse_opinion = { modifier = opinion_supported_challenge who = event_target:challenger years = 5 }
		hidden_tooltip = {
			event_target:challenger = {
				change_variable = { which = supporters value = 1 }
			}
		}
		if = {
			limit = { has_character_flag = forced_support_challenger }
			custom_tooltip = { text = TT_challenger_favor }
			hidden_tooltip = {
				clr_character_flag = forced_support_challenger
				reverse_remove_favor = event_target:challenger
				event_target:challenger = {
					letter_event = { id = CHALLENGE.16 }
				}
			}
		}
		ai_chance = {
			factor = 10
			additive_opinion_modifier = {
				factor = 0.7
				who = event_target:challenger
			}
			additive_opinion_modifier = {
				factor = -0.7
				who = event_target:challenger
				event_target:challenged_party = { has_character_flag = defending_party }
			}
		}
	}
	
	# Support no one
	option = {
		trigger = {
			NOR = {
				has_character_flag = forced_support_defender
				has_character_flag = forced_support_challenger
			}
		}
		name = EVTOPTC_CHALLENGE.20
		ai_chance = {
			factor = 20
			modifier = {
				factor = 2
				trait = slothful
			}
		}
	}
}

# CHALLENGE.21 - Inform character of their level of support
character_event = {
	id = CHALLENGE.21
	desc = {
		# Not challenger, ahead of challenger
		trigger = {
			NOT = { character = event_target:challenger }
			check_variable = { which = supporters which = event_target:challenger }
		}
		text = EVTDESCA_CHALLENGE.21
		picture = GFX_evt_council_agreement
	}
	desc = {
		# Not challenger, behind challenger
		trigger = {
			NOT = { character = event_target:challenger }
			NOT = { check_variable = { which = supporters which = event_target:challenger } }
		}
		text = EVTDESCB_CHALLENGE.21
		picture = GFX_evt_council_quarrelling
	}
	desc = {
		# challenger, ahead
		trigger = {
			NOT = { has_character_flag = defending_party }
			OR = {
				event_target:challenged_party = {
					AND = {
						has_character_flag = defending_party
						NOT = { check_variable = { which = supporters which = ROOT } }
					}
				}
				event_target:champion = {
					AND = {
						has_character_flag = defending_party
						NOT = { check_variable = { which = supporters which = ROOT } }
					}
				}
			}
		}
		text = EVTDESCA_CHALLENGE.21
		picture = GFX_evt_council_agreement
	}
	desc = {
		# challenger, behind
		trigger = {
			NOT = { has_character_flag = defending_party }
			OR = {
				event_target:challenged_party = {
					AND = {
						has_character_flag = defending_party
						check_variable = { which = supporters which = ROOT }
					}
				}
				event_target:champion = {
					AND = {
						has_character_flag = defending_party
						check_variable = { which = supporters which = ROOT }
					}
				}
			}
		}
		text = EVTDESCB_CHALLENGE.21
		picture = GFX_evt_council_quarrelling
	}
	picture = GFX_evt_council
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	ai = no # Don't bother sending informational events to ai
	
	option = {
		name = EVTOPTA_CHALLENGE.21
	}
}

# CHALLENGE.22 - Alert that you were challenged while incapable or are a child with no champion
character_event = {
	id = CHALLENGE.22
	# Child, champions refused
	desc = {
		trigger = {
			is_adult = no
			has_character_flag = asked_champion
		}
		text = EVTDESCA_CHALLENGE.22
		picture = GFX_evt_child_bully
	}
	# Child, no champions available
	desc = {
		trigger = {
			is_adult = no
			NOT = { has_character_flag = asked_champion }
		}
		text = EVTDESCB_CHALLENGE.22
		picture = GFX_evt_child_play
	}
	desc = {
		trigger = {
			is_adult = yes
		}
		text = EVTDESCC_CHALLENGE.22
		picture = GFX_evt_illness
	}
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	ai = no # Don't bother sending informational events to ai
	
	option = {
		name = EVTOPTA_CHALLENGE.22
	}
}

# CHALLENGE.23 - Inform challenger of who they are fighting
character_event = {
	id = CHALLENGE.23
	desc = {
		trigger = {
			event_target:challenged_party = {
				character = event_target:champion
			}
		}
		text = EVTDESCA_CHALLENGE.23
	}
	desc = {
		trigger = {
			event_target:challenged_party = {
				NOT = { character = event_target:champion }
			}
		}
		text = EVTDESCB_CHALLENGE.23
	}
	picture = GFX_evt_knight_kneeling
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	ai = no # Don't bother sending informational events to ai
	
	option = {
		name = EVTOPTA_CHALLENGE.23
	}
}

# CHALLENGE.24 - Your champion has been selected
character_event = {
	id = CHALLENGE.24
	desc = EVTDESC_CHALLENGE.24
	picture = GFX_evt_knight_kneeling
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		trigger = { trait = zealous }
		name = EVTOPTA_CHALLENGE.24
		hidden_tooltip = {
			character_event = { id = CHALLENGE.19 days = 2 }
		}
	}
	option = {
		trigger = { NOT = { trait = zealous } }
		name = EVTOPTB_CHALLENGE.24
		hidden_tooltip = {
			character_event = { id = CHALLENGE.19 days = 2 }
		}
	}
}

# CHALLENGE.25 - Abort! Someone important died
character_event = {
	id = CHALLENGE.25
	desc = {
		trigger = {
			character = event_target:challenger
		}
		text = EVTDESCA_CHALLENGE.25
	}
	desc = {
		trigger = {
			NOT = { character = event_target:challenger }
		}
		text = EVTDESCB_CHALLENGE.25
	}
	picture = GFX_evt_death
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		log = "Aborting a challenge due to a death."
		if = {
			limit = { character = event_target:challenged_party }
			any_vassal = {
				clear_delayed_event = { id = CHALLENGE.20 }
			}
		}
		clear_delayed_event = { id = CHALLENGE.18 }
		clear_delayed_event = { id = CHALLENGE.21 }
		clear_delayed_event = { id = CHALLENGE.23 }
		clear_delayed_event = { id = CHALLENGE.26 }
		clear_delayed_event = { id = CHALLENGE.27 }
		set_variable = { which = support value = 0 }
		clr_character_flag = asked_champion
		clr_global_flag = ongoing_werewolf_challenge
	}
	
	option = {
		name = EVTOPTA_CHALLENGE.25
		if = {
			limit = { character = event_target:challenger }
			remove_character_modifier = challenged_liege
			remove_character_modifier = facing_challenge
		}
		if = {
			limit = { character = event_target:challenged_party }
			remove_character_modifier = facing_challenge
		}
		if = {
			limit = { character = event_target:champion }
			remove_character_modifier = facing_challenge
		}
	}
}

# CHALLENGE.26 - Inform challenger of fight against another claimant
character_event = {
	id = CHALLENGE.26
	desc = EVTDESC_CHALLENGE.26
	picture = GFX_evt_council
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	ai = no # Don't need notification event for ai
	
	option = {
		name = EVTOPTA_CHALLENGE.26
	}
}

# CHALLENGE.27 - Set up the fight
character_event = {
	id = CHALLENGE.27
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		log = "Setting up [Root.GetTitledName]'s challenge."
		# Inform the participants that the fight is about to start
		event_target:challenger = { character_event = { id = CHALLENGE.56 } }
		event_target:champion = { character_event = { id = CHALLENGE.56 } }
		
		# Non-werewolves and low-control characters get a penalty
		event_target:challenger = {
			if = {
				limit = {
					OR = {
						NOT = { trait = werewolf }
						check_variable = { which = control value <= 3 }
					}
				}
				set_character_flag = not_shapeshifted
			}
		}
		event_target:champion = {
			if = {
				limit = {
					OR = {
						NOT = { trait = werewolf }
						check_variable = { which = control value <= 3 }
					}
				}
				set_character_flag = not_shapeshifted
			}
		}
		
		# Set support multiplier
		event_target:challenger = { combat_set_support_multiplier = yes }
		event_target:champion = { combat_set_support_multiplier = yes }
		
		# Set character HP
		event_target:challenger = { combat_set_hp = yes }
		event_target:champion = { combat_set_hp = yes }
		
		# Set initial morale
		event_target:challenger = { combat_set_morale = yes }
		event_target:champion = { combat_set_morale = yes }
		
		# Enter combat loop
		character_event = { id = CHALLENGE.28 days = 1 }
	}
}

# CHALLENGE.28 - Combat loop start point
character_event = {
	id = CHALLENGE.28
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		log = "Start of combat loop for [Root.GetTitledName]'s challenge."
		# Clear some unneeded event targets
		clear_event_target = first_turn
		clear_event_target = second_turn
		clear_event_target = enemy_turn
		# Set challenger's stats and clear previous combat round
		event_target:challenger = {
			clear_combat_flags = yes
			combat_set_damage = yes
			combat_set_defense = yes
			combat_set_accuracy = yes
			combat_set_speed = yes
			combat_set_morale = yes # Last so last turn's morale changes affect stats
			clr_character_flag = status_addled_senses # Must be cleared after stats are set
		}
		
		# Set champion's stats and clear previous combat round
		event_target:champion = {
			clear_combat_flags = yes
			combat_set_damage = yes
			combat_set_defense = yes
			combat_set_accuracy = yes
			combat_set_speed = yes
			combat_set_morale = yes # Last so last turn's morale changes affect stats
			clr_character_flag = status_addled_senses # Must be cleared after stats are set
		}
		
		# Handle dead characters
		# Both dead
		if = {
			limit = {
				NOR = {
					event_target:challenger = { always = yes }
					event_target:champion = { always = yes }
				}
			}
			# Inform liege.  If they happen to be dead, oh well, no one left to care
			character_event = { id = CHALLENGE.77 }
			break = yes
		}
		# Challenger dead
		if = {
			limit = { NOT = { event_target:challenger = { always = yes } } }
			# Defender wins
			if = {
				limit = {
					event_target:challenged_party = { has_character_flag = defending_party }
				}
				event_target:challenged_party = { character_event = { id = CHALLENGE.66 } }
			}
			else = {
				event_target:champion = { character_event = { id = CHALLENGE.66 } }
			}
			
			break = yes
		}
		# Champion dead
		if = {
			limit = { NOT = { event_target:champion = { always = yes } } }
			# Challenger wins, though if the liege died under unrelated circumstances, they might not get properly rewarded
			event_target:challenger = { character_event = { id = CHALLENGE.61 } }
			
			break = yes
		}
		
		# Determine combat order for this round
		# Rework in 2.8 when variables can be on right-hand side of equations
		random_list = {
			1 = { # Challenger goes first
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 1 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 2 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 3 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 4 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 5 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 6 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 7 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 8 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 9 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 10 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 11 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 12 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 13 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 14 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 15 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 16 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 17 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 18 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 19 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 20 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 21 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 22 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 23 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 24 } }
				}
				modifier = {
					factor = 2
					event_target:challenger = { check_variable = { which = combat_speed value = 25 } }
				}
				event_target:challenger = {
					save_event_target_as = first_turn
				}
				event_target:champion = {
					save_event_target_as = second_turn
				}
			}
			1 = { # Champion goes first
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 1 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 2 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 3 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 4 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 5 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 6 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 7 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 8 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 9 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 10 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 11 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 12 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 13 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 14 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 15 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 16 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 17 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 18 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 19 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 20 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 21 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 22 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 23 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 24 } }
				}
				modifier = {
					factor = 2
					event_target:champion = { check_variable = { which = combat_speed value = 25 } }
				}
				event_target:champion = {
					save_event_target_as = first_turn
				}
				event_target:challenger = {
					save_event_target_as = second_turn
				}
			}
		}
		
		# First character gets an event selected
		event_target:first_turn = {
			character_event = { id = CHALLENGE.29 days = 1 }
		}
	}
}

# CHALLENGE.29 - Select event for character going first
character_event = {
	id = CHALLENGE.29
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			# Secret werewolf event
			6 = {
				modifier = {
					factor = 0
					trait = known_werewolf
				}
				modifier = {
					factor = 2
					trait = deceitful
				}
				modifier = {
					factor = 2
					trait = schemer
				}
				modifier = {
					factor = 0.5
					trait = shy
				}
				set_character_flag = event_secret_werewolf
				repeat_event = { id = CHALLENGE.30 days = 1}
			}
			# Low Control
			2 = {
				trigger = { trait = werewolf }
				modifier = {
					factor = 0
					NAND = {
						trait = werewolf
						check_variable = { which = control value <= 3 }
					}
				}
				modifier = {
					factor = 1.5
					trait = werewolf
					check_variable = { which = control value <= 2 }
				}
				modifier = {
					factor = 2
					trait = werewolf
					check_variable = { which = control value == 1 }
				}
				set_character_flag = event_berserk
				repeat_event = { id = CHALLENGE.31 days = 1 }
			}
			# Untransformed werewolf can take turn to transform
			1 = {
				trigger = {
					has_character_flag = not_shapeshifted
					trait = werewolf
				}
				modifier = {
					factor = 0
					NAND = {
						trait = werewolf
						check_variable = { which = control value <= 3 }
					}
				}
				modifier = {
					factor = 1.5
					check_variable = { which = control value = 2 }
				}
				modifier = {
					factor = 2
					check_variable = { which = control value = 3 }
				}
				set_character_flag = event_transform
				repeat_event = { id = CHALLENGE.87 days = 1 }
			}
			# Standard face-off. Most common
			4 = {
				modifier = {
					factor = 1.5
					trait = stubborn
				}
				modifier = {
					factor = 1.5
					check_variable = { which = combat_hp value = 30 }
				}
				set_character_flag = event_normal
				repeat_event = { id = CHALLENGE.32 days = 1 }
			}
			# Opponent has poor footing
			1 = {
				modifier = {
					factor = 1.5
					event_target:second_turn = {
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
				}
				modifier = {
					factor = 2
					event_target:second_turn = {
						trait = drunkard
					}
				}
				modifier = {
					factor = 2
					event_target:second_turn = {
						trait = one_legged
					}
				}
				modifier = {
					factor = 2
					event_target:second_turn = {
						trait = clubfooted
					}
				}
				modifier = {
					factor = 2
					event_target:second_turn = {
						trait = dancing_plague
					}
				}
				modifier = {
					factor = 0.5
					event_target:second_turn = {
						trait = duelist
					}
				}
				# Required you to notice the opening
				modifier = {
					factor = 0.7
					trait = one_eyed
				}
				modifier = {
					factor = 0.1
					trait = blinded
				}
				set_character_flag = event_poor_footing
				repeat_event = { id = CHALLENGE.33 days = 1 }
			}
			# Opponent is wounded
			2 = {
				modifier = {
					factor = 0
					event_target:second_turn = {
						NOR = {
							trait = wounded
							is_maimed_trigger = yes
							trait = chest_pain
							trait = cramps
							trait = abdominal_pain
							NOT = { check_variable = { which = combat_hp value = 10 } }
						}
					}
				}
				modifier = {
					factor = 2
					event_target:second_turn = { is_maimed_trigger = yes }
				}
				modifier = {
					factor = 2
					event_target:second_turn = { trait = severely_injured }
				}
				modifier = {
					factor = 1.5
					event_target:second_turn = { NOT = { check_variable = { which = combat_hp value = 10 } } }
				}
				set_character_flag = event_opponent_wounded
				repeat_event = { id = CHALLENGE.34 days = 1 }
			}
			# You are wounded
			2 = {
				modifier = {
					factor = 0
					NOR = {
						trait = wounded
						is_maimed_trigger = yes
						trait = chest_pain
						trait = cramps
						trait = abdominal_pain
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
				}
				modifier = {
					factor = 2
					is_maimed_trigger = yes
				}
				modifier = {
					factor = 2
					trait = severely_injured
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_hp value = 10 } }
				}
				set_character_flag = event_wounded
				repeat_event = { id = CHALLENGE.35 days = 1 }
			}
			# Magic
			2 = {
				modifier = {
					factor = 0
					NOR = {
						trait = novice_mage
						trait = eldritch_scholar
						trait = veteran_wizard
						trait = arcane_master
					}
				}
				modifier = {
					factor = 1.5
					trait = arcane_master
				}
				modifier = {
					factor = 2
					OR = {
						trait = enchanter
						trait = summoner
					}
				}
				set_character_flag = event_magic
				repeat_event = { id = CHALLENGE.36 days = 1 }
			}
			# Tired
			1 = {
				modifier = {
					factor = 1.5
					trait = slothful
				}
				modifier = {
					factor = 1.5
					trait = gluttonous
				}
				modifier = {
					factor = 2
					NOT = { health = 3 }
				}
				modifier = {
					factor = 0.5
					OR = {
						trait = strong
						trait = robust
					}
				}
				modifier = {
					factor = 1.5
					trait = wounded
				}
				modifier = {
					factor = 3
					OR = {
						trait = fatigue
						trait = has_tuberculosis
						trait = has_typhus
						trait = flu
						trait = gout
						trait = rabies
						trait = cancer
					}
				}
				modifier = {
					factor = 2
					OR = {
						trait = weak
						trait = feeble
					}
				}
				set_character_flag = event_tired
				repeat_event = { id = CHALLENGE.37 days = 1 }
			}
			# Sabotage by supporter
			1 = {
				modifier = {
					factor = 0
					NOT = { check_variable = { which = supporters value = 1 } }
				}
				modifier = {
					factor = 1.5
					check_variable = { which = supporters which = event_target:second_turn }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 3 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 5 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 8 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 12 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 17 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 23 }
				}
				set_character_flag = event_sabotage
				repeat_event = { id = CHALLENGE.38 days = 1 }
			}
			# Intimidated
			1 = {
				modifier = {
					factor = 2
					trait = craven
				}
				modifier = {
					factor = 0.1
					trait = brave
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = 0 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -1 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -2 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -3 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -4 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -5 } }
				}
				set_character_flag = event_intimidated
				repeat_event = { id = CHALLENGE.39 days = 1 }
			}
		}
	}
}

# CHALLENGE.30 - First Turn - Secret werewolf can reveal themself
character_event = {
	id = CHALLENGE.30
	desc = EVTDESCA_CHALLENGE.30
	desc = EVTDESCB_CHALLENGE.30
	desc = EVTDESCC_CHALLENGE.30
	picture = GFX_evt_werewolf_shadowed
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Shift and attack
	option = {
		name = EVTOPTA_CHALLENGE.30
		add_trait = known_werewolf
		hidden_tooltip = {
			remove_trait = secret_werewolf
			remove_character_modifier = known_monster
			set_character_flag = choice_shift_attack
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 2 }
			}
		}
		if = {
			limit = { has_character_flag = not_shapeshifted }
			custom_tooltip = {
				text = tt_lose_shapeshift_penalty
				hidden_tooltip = {
					clr_character_flag = not_shapeshifted
				}
			}
		}
		if = {
			limit = { check_variable = { which = control value <= 3 } }
			random = {
				chance = 20
				increase_control = yes
			}
		}
		ai_chance = {
			factor = 5
			modifier = {
				factor = 2
				trait = deceitful
			}
			modifier = {
				factor = 2
				ai_ambition = 50
			}
		}
	}
	# Standard attack
	option = {
		name = EVTOPTB_CHALLENGE.30
		hidden_tooltip = {
			set_character_flag = choice_normal_attack
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = content
			}
		}
	}
	# Defend
	option = {
		name = EVTOPTC_CHALLENGE.30
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
		}
	}
	# Keep Distance
	option = {
		name = EVTOPTD_CHALLENGE.30
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_evade
			hidden_tooltip = {
				set_character_flag = status_evade
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.31 - First Turn - Character with low control goes berserk. Not yet implemented
character_event = {
	id = CHALLENGE.31
	desc = EVTDESCA_WEREWOLF.31
	desc = EVTDESCB_CHALLENGE.31
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.31
		
		if = {
			limit = { 
				trait = werewolf
				has_character_flag = not_shapeshifted 
			}
			custom_tooltip = {
				text = tt_lose_shapeshift_penalty
				hidden_tooltip = {
					clr_character_flag = not_shapeshifted
				}
			}
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_defense_low
			hidden_tooltip = {
				subtract_variable = { which = combat_defense value = 1 }
			}
		}
		custom_tooltip = {
			text = TT_morale_low_1
			set_character_flag = attack_morale_1
		}
		hidden_tooltip = {
			set_character_flag = choice_berzerk
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.32 - First Turn - Standard battle turn
character_event = {
	id = CHALLENGE.32
	desc = EVTDESCA_CHALLENGE.32
	desc = EVTDESCB_CHALLENGE.32
	desc = EVTDESCC_CHALLENGE.32
	desc = EVTDESCD_CHALLENGE.32
	desc = EVTDESCE_CHALLENGE.32
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		random = {
			chance = 50
			set_character_flag = alt_attack
		}
	}
	
	# Aggressive Attack
	option = {
		trigger = {
			OR = {
				trait = aggressive_leader
				trait = berserker
				trait = wroth
			}
		}
		name = EVTOPTA_CHALLENGE.32
		name = EVTOPTJ_CHALLENGE.32
		name = EVTOPTK_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_aggressive_attack
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_defense_low
			hidden_tooltip = {
				subtract_variable = { which = combat_defense value = 1 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = berserker
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}
	# Ferocious Charge
	option = {
		trigger = { 
			NOT = { has_character_flag = alt_attack }
		}
		name = EVTOPTB_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_ferocious_charge
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_morale_low_1
			set_character_flag = attack_morale_1
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = berserker
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}
	# Press in
	option = {
		trigger = {
			has_character_flag = alt_attack
		}
		name = EVTOPTC_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_press_in
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_cause_pain
			hidden_tooltip = {
				set_character_flag = attack_pain
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = diligent
			}
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
	# Cautious attack
	option = {
		trigger = {
			OR = {
				trait = shy
				trait = craven
			}
		}
		name = EVTOPTD_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_cautious_attack
		}
		custom_tooltip = {
			text = TT_attack_low_2
			hidden_tooltip = {
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 7 }
				divide_variable = { which = combat_accuracy value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 2 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
		}
	}
	# Smite Infidel
	option = {
		trigger = {
			OR = {
				trait = zealous
				trait = holy_warrior
			}
			NOT = { religion_group = event_target:second_turn }
		}
		name = EVTOPTE_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_smite_infidel
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = zealous
			}
			modifier = {
				factor = 2
				trait = holy_warrior
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				has_crusade_trait_trigger = yes
			}
		}
	}
	# Mighty Swing
	option = {
		name = EVTOPTF_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_mighty_swing
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 7 }
				divide_variable = { which = combat_accuracy value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_bad_miss
			hidden_tooltip = {
				set_character_flag = status_wild_chance
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
		}
	}
	# Hack at limbs
	option = {
		trigger = { trait = cruel }
		name = EVTOPTG_CHALLENGE.32
		name = EVTOPTL_CHALLENGE.32
		tooltip_info = cruel
		hidden_tooltip = {
			set_character_flag = choice_hack_limbs
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_maim_chance
			hidden_tooltip = {
				set_character_flag = attack_maim
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = cannibal_trait
			}
			modifier = {
				factor = 2
				trait = lunatic
			}
			modifier = {
				factor = 2
				trait = impaler
			}
		}
	}
	# Focus on defense
	option = {
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		name = EVTOPTH_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 2
				trait = craven
			}
		}
	}
	# Keep distance
	option = {
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		name = EVTOPTI_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_evade
			hidden_tooltip = {
				set_character_flag = status_evade
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 2
				trait = craven
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			clr_character_flag = alt_attack
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.33 - First Turn - Opponent has poor footing
character_event = {
	id = CHALLENGE.33
	desc = EVTDESCA_CHALLENGE.33
	desc = EVTDESCB_CHALLENGE.33
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Charge
	option = {
		name = EVTOPTA_CHALLENGE.33
		hidden_tooltip = {
			set_character_flag = choice_charge
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
	# Tackle
	option = {
		name = EVTOPTB_CHALLENGE.33
		hidden_tooltip = {
			set_character_flag = choice_tackle
		}
		custom_tooltip = {
			text = TT_attack_low_3
			hidden_tooltip = {
				divide_variable = { which = combat_damage value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_wound_chance
			hidden_tooltip = {
				set_character_flag = attack_wound
			}
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = arbitrary
			}
		}
	}
	# All effort swing
	option = {
		name = EVTOPTC_CHALLENGE.33
		hidden_tooltip = {
			set_character_flag = choice_all_effort_swing
		}
		custom_tooltip = {
			text = TT_attack_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
			}
		}
		custom_tooltip = {
			text = TT_bad_miss
			hidden_tooltip = {
				set_character_flag = status_wild_chance
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = proud
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.34 - First Turn  - Opponent is wounded
character_event = {
	id = CHALLENGE.34
	desc = EVTDESC_CHALLENGE.34
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Oppotunistic blow
	option = {
		name = EVTOPTA_CHALLENGE.34
		hidden_tooltip = {
			set_character_flag = choice_opportunistic_blow
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = duelist
			}
			modifier = {
				factor = 2
				trait = diligent
			}
		}
	}
	# Make injury worse
	option = {
		name = EVTOPTB_CHALLENGE.34
		hidden_tooltip = {
			set_character_flag = choice_worsen_injury
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_maim_chance
			hidden_tooltip = {
				set_character_flag = attack_maim
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = cannibal_trait
			}
		}
	}
	# Press hard
	option = {
		name = EVTOPTC_CHALLENGE.34
		hidden_tooltip = {
			set_character_flag = choice_press_injury
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.35 - First Turn - Wounded
character_event = {
	id = CHALLENGE.35
	desc = EVTDESC_CHALLENGE.35
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Focus on Defense
	option = {
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		name = EVTOPTA_CHALLENGE.35
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 2
				trait = craven
			}
		}
	}
	# Keep distance
	option = {
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		name = EVTOPTB_CHALLENGE.35
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_evade
			hidden_tooltip = {
				set_character_flag = status_evade
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
			modifier = {
				factor = 2
				trait = craven
			}
		}
	}
	# Push through
	option = {
		name = EVTOPTC_CHALLENGE.35
		hidden_tooltip = {
			set_character_flag = choice_push_through_pain
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_injure_self
			hidden_tooltip = {
				set_character_flag = status_high_wound
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = proud
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.36 - First Turn - Magic
character_event = {
	id = CHALLENGE.36
	desc = EVTDESC_CHALLENGE.36
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Fear Illusion
	option = {
		trigger = { trait = enchanter }
		name = EVTOPTA_CHALLENGE.36
		tooltip_info = enchanter
		hidden_tooltip = {
			set_character_flag = choice_fear_illusion
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_morale_low_3
			hidden_tooltip = {
				event_target:second_turn = {
					subtract_variable = { which = combat_morale value = 3 }
				}
			}
		}
		custom_tooltip = {
			text = TT_lower_damage
			hidden_tooltip = {
				event_target:second_turn = {
					multiply_variable = { which = combat_damage value = 7 }
					divide_variable = { which = combat_damage value = 10 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
	# Illusion Copy
	option = {
		name = EVTOPTB_CHALLENGE.36
		hidden_tooltip = {
			set_character_flag = choice_illusion_copy
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Summon Spectral Warrior
	option = {
		name = EVTOPTC_CHALLENGE.36
		trigger = { trait = summoner }
		tooltip_info = summoner
		hidden_tooltip = {
			set_character_flag = choice_spectral_warrior
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
	# Addle Senses
	option = {
		name = EVTOPTD_CHALLENGE.36
		hidden_tooltip = {
			set_character_flag = choice_addle_senses
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_addle_senses
			hidden_tooltip = {
				event_target:second_turn = {
					set_character_flag = status_addled_senses
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = patient
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.37 - First Turn - Tired
character_event = {
	id = CHALLENGE.37
	desc = EVTDESCA_CHALLENGE.37
	desc = EVTDESCB_CHALLENGE.37
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Catch Breath
	option = {
		name = EVTOPTA_CHALLENGE.37
		hidden_tooltip = {
			set_character_flag = choice_catch_breath
			set_character_flag = status_no_attack
		}
		if = {
			limit = { trait = werewolf }
			random = {
				chance = 10
				if = {
					limit = { trait = wounded }
					remove_trait = wounded
					hidden_tooltip = {
						# Notify
						character_event = { id = MN.4 }
					}
				}
				change_variable = { which = combat_hp value = 1 }
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.38 - First Turn - Sabotage by supporter
character_event = {
	id = CHALLENGE.38
	desc = EVTDESCA_CHALLENGE.38
	desc = EVTDESCB_CHALLENGE.38
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Strike Opening
	option = {
		trigger = { NOT = { trait = honest } }
		name = EVTOPTA_CHALLENGE.38
		hidden_tooltip = {
			set_character_flag = choice_strike_opening
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = coimbat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_wound_chance
			hidden_tooltip = {
				set_character_flag = attack_wound
			}
		}
		if = {
			limit = { NOT = { trait = deceitful } }
			random = {
				chance = 30
				add_trait = deceitful
				hidden_tooltip = {
					character_event = { id = 38255 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 4
				trait = deceitful
			}
		}
	}
	# Fight honorably
	option = {
		name = EVTOPTB_CHALLENGE.38
		hidden_tooltip = {
			set_character_flag = choice_fight_honorably
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		prestige = 10
		if = {
			limit = {
				NOR = {
					trait = honest
					trait = deceitful
				}
			}
			random = {
				chance = 30
				add_trait = honest
				hidden_tooltip = {
					# Notify
					character_event = { id = 38262 }
				}
			}
		}
		if = {
			limit = {
				trait = deceitful
			}
			random = {
				chance = 30
				remove_trait = deceitful
				hidden_tooltip = {
					# Notify
					character_event = { id = 38255 }
				}
			}
		}
		ai_chance = {
		 factor = 1
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.39 - Intimidated
character_event = {
	id = CHALLENGE.39
	desc = EVTDESCA_CHALLENGE.39
	desc = EVTDESCB_CHALLENGE.39
	desc = EVTDESCC_CHALLENGE.39
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Flee
	option = {
		name = EVTOPTA_CHALLENGE.39
		name = EVTOPTE_CHALLENGE.39
		name = EVTOPTF_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_flee
		}
		if = {
			limit = { trait = brave }
			remove_trait = brave
		}
		if = {
			limit = { NOT = { trait = craven } }
			add_trait = craven
		}
		# Inform second turn of the flight
		character_event = { id = CHALLENGE.40 days = 1 }
		# Determine who fled and send proper events
		if = {
			# Challenger fled
			limit = { character = event_target:challenger }
			if = {
				limit = {
					event_target:challenged_party = { has_character_flag = defending_party }
				}
				event_target:challenged_party = { character_event = { id = CHALLENGE.66 } }
			}
			else = {
				event_target:champion = { character_event = { id = CHALLENGE.66 } }
			}
			character_event = { id = CHALLENGE.73 days = 1 }
		}
		if = {
			# Defender fled
			limit = { has_character_flag = defending_party }
			event_target:challenger = {
				character_event = { id = CHALLENGE.61 days = 1 }
			}
			character_event = { id = CHALLENGE.73 days = 1 }
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { check_variable = { which = combat_morale value = -3 } }
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.5
				ai_ambition = 40
			}
		}
	}
	# Focus on defense
	option = {
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		name = EVTOPTB_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Keep distance
	option = {
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		name = EVTOPTC_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_evade
			hidden_tooltip = {
				set_character_flag = status_evade
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Cautious attack
	option = {
		name = EVTOPTD_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_cautious_attack
		}
		custom_tooltip = {
			text = TT_attack_low_2
			hidden_tooltip = {
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 7 }
				divide_variable = { which = combat_accuracy value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 2 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			if = {
				limit = {
					NOT = {
						has_character_flag = choice_flee
					}
				}
				# Set turn variables
				event_target:second_turn = { save_event_target_as = enemy_turn }
				# Call event to calculate turn result
				repeat_event = { id = CHALLENGE.78 days = 1 }
			}
		}
	}
}

# CHALLENGE.40 - Inform opponent of result
character_event = {
	id = CHALLENGE.40
	picture = GFX_evt_werewolf_fight
	desc = {
		# Shifted and hit
		trigger = {
			FROM = {
				has_character_flag = choice_shift_attack
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCAH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Shifted and miss
		trigger = {
			FROM = {
				has_character_flag = choice_shift_attack
				has_character_flag = status_missed
			}
		}
		text = EVTDESCAM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Normal attack hit
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_normal_attack
					has_character_flag = choice_fight_honorably
					has_character_flag = choice_strike_body
					has_character_flag = choice_strike_around
				}
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCBH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Normal attack missed
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_normal_attack
					has_character_flag = choice_opportunistic_blow
					has_character_flag = choice_worsen_injury
					has_character_flag = choice_strike_opening
					has_character_flag = choice_fight_honorably
					has_character_flag = choice_strike_body
					has_character_flag = choice_strike_around
				}
				has_character_flag = status_missed
			}
		}
		text = EVTDESCBM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Defense
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_defend
					has_character_flag = choice_keep_distance
				}
			}
		}
		text = EVTDESCC_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Aggressive attack hit
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_aggressive_attack
					has_character_flag = choice_heavy_blows
				}
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCDH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Aggressive attack missed
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_aggressive_attack
					has_character_flag = choice_heavy_blows
				}
				has_character_flag = status_missed
			}
		}
		text = EVTDESCDM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Ferocious charge hit
		trigger = {
			FROM = {
				has_character_flag = choice_ferocious_charge
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCEH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Ferocious charge missed
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_ferocious_charge
					has_character_flag = choice_charge
					has_character_flag = choice_tackle
				}
				has_character_flag = status_missed
			}
		}
		text = EVTDESCEM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Press in hit
		trigger = {
			FROM = {
				has_character_flag = choice_press_in
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCFH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Press in missed
		trigger = {
			FROM = {
				has_character_flag = choice_press_in
				has_character_flag = status_missed
			}
		}
		text = EVTDESCFM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Cautious attack hit
		trigger = {
			FROM = {
				has_character_flag = choice_cautious_attack
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCGH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Cautious attack missed
		trigger = {
			FROM = {
				has_character_flag = choice_cautious_attack
				has_character_flag = status_missed
			}
		}
		text = EVTDESCGM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Smite hit
		trigger = {
			FROM = {
				has_character_flag = choice_smite_infidel
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCHH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Smite miss
		trigger = {
			FROM = {
				has_character_flag = choice_smite_infidel
				has_character_flag = status_missed
			}
		}
		text = EVTDESCHM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Mighty Swing hit
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_mighty_swing
					has_character_flag = choice_overpower
					has_character_flag = choice_all_out_attack
				}
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCIH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Mighty Swing missed
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_mighty_swing
					has_character_flag = choice_all_effort_swing
					has_character_flag = choice_overpower
					has_character_flag = choice_all_out_attack
				}
				has_character_flag = status_missed
			}
		}
		text = EVTDESCIM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Hack Limbs hit
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_hack_limbs
					has_character_flag = choice_strike_arm
				}
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCJH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Hack Limbs missed
		trigger = {
			FROM = {
				OR = {
					has_character_flag = choice_hack_limbs
					has_character_flag = choice_strike_arm
				}
				has_character_flag = status_missed
			}
		}
		text = EVTDESCJM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Charge (bad footing) hit
		trigger = {
			FROM = {
				has_character_flag = choice_charge
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCKH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Tackle (bad footing) hit
		trigger = {
			FROM = {
				has_character_flag = choice_tackle
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCLH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# All-effort swing (bad footing) hit
		trigger = {
			FROM = {
				has_character_flag = choice_all_effort_swing
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCMH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Opportunistic blow hit
		trigger = {
			FROM = {
				has_character_flag = choice_opportunistic_blow
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCNH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Attack wounds hit
		trigger = {
			FROM = {
				has_character_flag = choice_worsen_injury
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCOH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Press wounds hit
		trigger = {
			FROM = {
				has_character_flag = choice_press_injury
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCPH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Press wounds missed
		trigger = {
			FROM = {
				has_character_flag = choice_press_injury
				has_character_flag = status_missed
			}
		}
		text = EVTDESCPM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Fear Illusion
		trigger = {
			FROM = {
				has_character_flag = choice_fear_illusion
			}
		}
		text = EVTDESCQ_CHALLENGE.40
		picture = GFX_evt_lunatic
	}
	desc = {
		# Illusion copy hit
		trigger = {
			FROM = {
				has_character_flag = choice_illusion_copy
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCRH_CHALLENGE.40
		picture = GFX_evt_battle
	}
	desc = {
		# Illusion copy missed
		trigger = {
			FROM = {
				has_character_flag = choice_illusion_copy
				has_character_flag = status_missed
			}
		}
		text = EVTDESCRM_CHALLENGE.40
		picture = GFX_evt_battle
	}
	desc = {
		# Spectral Warrior hit
		trigger = {
			FROM = {
				has_character_flag = choice_spectral_warrior
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCSH_CHALLENGE.40
		picture = GFX_evt_battle
	}
	desc = {
		# Spectral Warrior missed
		trigger = {
			FROM = {
				has_character_flag = choice_spectral_warrior
				has_character_flag = status_missed
			}
		}
		text = EVTDESCSM_CHALLENGE.40
		picture = GFX_evt_battle
	}
	desc = {
		# Addle Sensed
		trigger = {
			FROM = {
				has_character_flag = choice_addle_senses
			}
		}
		text = EVTDESCT_CHALLENGE.40
		picture = GFX_evt_lunatic
	}
	desc = {
		# Catch breath
		trigger = {
			FROM = {
				has_character_flag = choice_catch_breath
			}
		}
		text = EVTDESCU_CHALLENGE.40
		picture = GFX_evt_house_arrest_escape
	}
	desc = {
		# Stike Opening Hit
		trigger = {
			FROM = {
				has_character_flag = choice_strike_opening
				NOT = { has_character_flag = status_missed }
			}
		}
		text = EVTDESCVH_CHALLENGE.40
		picture = GFX_evt_assassination
	}
	desc = {
		# Fled
		trigger = {
			FROM = {
				has_character_flag = choice_flee
			}
		}
		text = EVTDESCW_CHALLENGE.40
		picture = GFX_evt_courier
	}
	desc = {
		# Undefended Strike - hit
		trigger = {
			FROM = {
				has_character_flag = choice_undefended_strike
				NOT = { has_character_flag = attack_missed }
			}
		}
		text = EVTDESCXH_CHALLENGE.40
		picture = GFX_evt_assassination
	}
	desc = {
		# Undefended Strike - miss
		trigger = {
			FROM = {
				has_character_flag = choice_undefended_strike
				has_character_flag = attack_missed
			}
		}
		text = EVTDESCXM_CHALLENGE.40
		picture = GFX_evt_duel_scene
	}
	desc = {
		# Berzerk - hit
		trigger = {
			FROM = {
				has_character_flag = choice_berzerk
				NOT = { has_character_flag = attack_missed }
			}
		}
		text = EVTDESCYH_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Berzerk - miss
		trigger = {
			FROM = {
				has_character_flag = choice_berzerk
				has_character_flag = attack_missed
			}
		}
		text = EVTDESCYM_CHALLENGE.40
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Shapeshift
		trigger = {
			FROM = {
				has_character_flag = choice_shapeshift
			}
		}
		text = EVTDESCZ_CHALLENGE.40
		picture = GFX_evt_werewolf_moon
	}
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Determine the option here to keep the triggers simple
	immediate = {
		# Opponent fled
		if = {
			limit = {
				FROM = {
					has_character_flag = choice_flee
				}
			}
			set_variable = { which = option_name value = 1 }
			break = yes
		}
		# Opponent leaves opening
		if = {
			limit = {
				FROM = {
					OR = {
						has_character_flag = status_missed
						has_character_flag = choice_catch_breath
						has_character_flag = event_wounded
					}
				}
			}
			set_variable = { which = option_name value = 2 }
			break = yes
		}
		# Scared
		if = {
			limit = {
				OR = {
					NOT = { check_variable = { which = combat_morale value = -3 } }
					FROM = {
						has_character_flag = choice_fear_illusion
					}
				}
			}
			set_variable = { which = option_name value = 3 }
			break = yes
		}
		# Defense
		if = {
			limit = {
				FROM = {
					OR = {
						has_character_flag = choice_defend
						has_character_flag = choice_keep_distance
						has_character_flag = choice_cautious_attack
					}
				}
			}
			set_variable = { which = option_name value = 4 }
			break = yes
		}
		# HP > 35
		if = {
			limit = {
				check_variable = { which = combat_hp value = 35 }
			}
			set_variable = { which = option_name value = 5 }
			break = yes
		}
		# HP > 20
		if = {
			limit = {
				check_variable = { which = combat_hp value = 20 }
			}
			set_variable = { which = option_name value = 0 }
			break = yes
		}
		# HP > 10
		if = {
			limit = {
				check_variable = { which = combat_hp value = 10 }
			}
			set_variable = { which = option_name value = 6 }
			break = yes
		}
		# HP > 5
		if = {
			limit = {
				check_variable = { which = combat_hp value = 5 }
			}
			set_variable = { which = option_name value = 7 }
			break = yes
		}
		# HP > 1
		if = {
			limit = {
				check_variable = { which = combat_hp value = 1 }
			}
			set_variable = { which = option_name value = 8 }
			break = yes
		}
		# HP = 0
		if = {
			limit = {
				check_variable = { which = combat_hp value = 0 }
			}
			set_variable = { which = option_name value = 9 }
			break = yes
		}
		# HP < 0
		if = {
			limit = {
				NOT = { check_variable = { which = combat_hp value = 0 } }
			}
			set_variable = { which = option_name value = 10 }
			break = yes
		}
		# Fallback
		set_variable = { which = option_name value = 0 }
	}
	
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 1 }
		}
		name = EVTOPTA_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 2 }
		}
		name = EVTOPTB_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 3 }
		}
		name = EVTOPTC_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 4 }
		}
		name = EVTOPTD_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 5 }
		}
		name = EVTOPTE_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 6 }
		}
		name = EVTOPTF_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 7 }
		}
		name = EVTOPTG_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 8 }
		}
		name = EVTOPTH_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 9 }
		}
		name = EVTOPTI_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 10 }
		}
		name = EVTOPTJ_CHALLENGE.40
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 0 }
		}
		name = EVTOPTK_CHALLENGE.40
	}
	
	after = {
		hidden_tooltip = { set_variable = { which = option_name value = 0 } }
	}
}

# CHALLENGE.41 - Result of your attack  - IMPORTANT - Set enemy_turn before calling
character_event = {
	id = CHALLENGE.41
	picture = GFX_evt_werewolf_fight
	# Attack - off-guard
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_shift_attack
				has_character_flag = choice_opportunistic_blow
				has_character_flag = choice_strike_opening
			}
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCAH_CHALLENGE.41
		picture = GFX_evt_assassination
	}
	# Attack - off-guard miss
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_opportunistic_blow
				has_character_flag = choice_strike_opening
			}
			has_character_flag = status_missed
		}
		text = EVTDESCLM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Shift attack missed
	desc = {
		trigger = {
			has_character_flag = choice_shift_attack
			has_character_flag = status_missed
		}
		text = EVTDESCAM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Normal attack hit
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_normal_attack
				has_character_flag = choice_fight_honorably
				has_character_flag = choice_strike_around
				has_character_flag = choice_strike_body
				has_character_flag = choice_push_through_pain
			}
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCBH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Normal attack missed
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_normal_attack
				has_character_flag = choice_fight_honorably
				has_character_flag = choice_push_through_pain
			}
			has_character_flag = status_missed
		}
		text = EVTDESCBM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Defense
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_defend
				has_character_flag = choice_keep_distance
			}
		}
		text = EVTDESCC_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Aggressive attack hit
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_aggressive_attack
				has_character_flag = choice_overpower
				has_character_flag = choice_heavy_blows
			}
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCDH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Aggressive attack miss
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_aggressive_attack
				has_character_flag = choice_overpower
				has_character_flag = choice_heavy_blows
			}
			has_character_flag = status_missed
		}
		text = EVTDESCDM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Charge hit
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_ferocious_charge
				has_character_flag = choice_charge
			}
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCEH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Charge miss
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_ferocious_charge
				has_character_flag = choice_charge
			}
			has_character_flag = status_missed
		}
		text = EVTDESCEM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Advance hit
	desc = {
		trigger = {
			has_character_flag = choice_press_in
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCFH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Advance miss
	desc = {
		trigger = {
			has_character_flag = choice_press_in
			has_character_flag = status_missed
		}
		text = EVTDESCFM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Cautious hit
	desc = {
		trigger = {
			has_character_flag = choice_cautious_attack
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCGH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Cautious miss
	desc = {
		trigger = {
			has_character_flag = choice_cautious_attack
			has_character_flag = status_missed
		}
		text = EVTDESCGM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Smite hit
	desc = {
		trigger = {
			has_character_flag = choice_smite_infidel
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCHH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Smite miss
	desc = {
		trigger = {
			has_character_flag = choice_smite_infidel
			has_character_flag = status_missed
		}
		text = EVTDESCHM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Mighty Swing hit
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_mighty_swing
				has_character_flag = choice_all_effort_swing
				has_character_flag = choice_all_out_attack
			}
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCIH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Mighty Swing miss
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_mighty_swing
				has_character_flag = choice_all_effort_swing
				has_character_flag = choice_all_out_attack
			}
			has_character_flag = status_missed
		}
		text = EVTDESCIM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Mighty Swing miss wide
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_mighty_swing
				has_character_flag = choice_all_effort_swing
			}
			has_character_flag = status_missed
			has_character_flag = status_swung_wide
		}
		text = EVTDESCIW_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Hack Limbs hit
	desc = {
		trigger = {
			has_character_flag = choice_hack_limbs
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCJH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Hack Limbs miss
	desc = {
		trigger = {
			has_character_flag = choice_hack_limbs
			has_character_flag = status_missed
		}
		text = EVTDESCJM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Tackle hit
	desc = {
		trigger = {
			has_character_flag = choice_tackle
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCKH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Tackle miss
	desc = {
		trigger = {
			has_character_flag = choice_tackle
			has_character_flag = status_missed
		}
		text = EVTDESCKM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Worsen Injury Hit
	desc = {
		trigger = {
			has_character_flag = choice_worsen_injury
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCMH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Injury Miss
	desc = {
		trigger = {
			has_character_flag = choice_press_injury
			has_character_flag = status_missed
		}
		text = EVTDESCMM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Press Injury Hit
	desc = {
		trigger = {
			has_character_flag = choice_press_injury
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCNH_CHALLENGE.41
		picture = GFX_evt_family_feud_republic
	}
	# Fear illusion
	desc = {
		trigger = {
			has_character_flag = choice_fear_illusion
		}
		text = EVTDESCO_CHALLENGE.41
		picture = GFX_evt_lunatic
	}
	# Illusion copy hit
	desc = {
		trigger = {
			has_character_flag = choice_illusion_copy
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCPH_CHALLENGE.41
		picture = GFX_evt_battle
	}
	# Illusion copy hit
	desc = {
		trigger = {
			has_character_flag = choice_illusion_copy
			has_character_flag = status_missed
		}
		text = EVTDESCPM_CHALLENGE.41
		picture = GFX_evt_battle
	}
	# Spectral Warrior hit
	desc = {
		trigger = {
			has_character_flag = choice_spectral_warrior
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCQH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Spectral Warrior miss
	desc = {
		trigger = {
			has_character_flag = choice_spectral_warrior
			has_character_flag = status_missed
		}
		text = EVTDESCQM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	# Addle Mind
	desc = {
		trigger = {
			has_character_flag = choice_addle_senses
		}
		text = EVTDESCR_CHALLENGE.41
		picture = GFX_evt_lunatic
	}
	# Catch Breath
	desc = {
		trigger = {
			has_character_flag = choice_catch_breath
		}
		text = EVTDESCS_CHALLENGE.41
		picture = GFX_evt_house_arrest_escape
	}
	# Flee
	desc = {
		trigger = {
			has_character_flag = choice_flee
		}
		text = EVTDESCT_CHALLENGE.41
		picture = GFX_evt_rider_adventure
	}
	# Undefended Strike - Hit
	desc = {
		trigger = {
			has_character_flag = choice_undefended_strike
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCUH_CHALLENGE.41
		picture = GFX_evt_assassination
	}
	# Undefended Strike - Miss
	desc = {
		trigger = {
			OR = {
				has_character_flag = choice_undefended_strike
				has_character_flag = choice_strike_arm
				has_character_flag = choice_strike_body
			}
			has_character_flag = status_missed
		}
		text = EVTDESCUM_CHALLENGE.41
		picture = GFX_evt_melee
	}
	# Undefended Strike - Miss
	desc = {
		trigger = {
			has_character_flag = choice_strike_around
			has_character_flag = status_missed
		}
		text = EVTDESCVM_CHALLENGE.41
		picture = GFX_evt_melee
	}
	# Strike Arm - Hit
	desc = {
		trigger = {
			has_character_flag = choice_strike_arm
			NOT = { has_character_flag = status_missed }
		}
		text = EVTDESCWH_CHALLENGE.41
		picture = GFX_evt_duel_scene
	}
	desc = {
		# Berzerk - hit
		trigger = {
			has_character_flag = choice_berzerk
			NOT = { has_character_flag = attack_missed }
		}
		text = EVTDESCXH_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Berzerk - miss
		trigger = {
			has_character_flag = choice_berzerk
			has_character_flag = attack_missed
		}
		text = EVTDESCXM_CHALLENGE.41
		picture = GFX_evt_werewolf_fight
	}
	desc = {
		# Shapeshift
		trigger = {
			has_character_flag = choice_shapeshift
		}
		text = EVTDESCY_CHALLENGE.41
		picture = GFX_evt_werewolf_moon
	}
	#picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Calculate response
	immediate = {
		# Opponent 0 HP
		if = {
			limit = {
				event_target:enemy_turn = {
					NOT = { check_variable = { which = combat_hp value = 1 } }
				}
			}
			set_variable = { which = option_name value = 2 }
			break = yes
		}
		# Opponent <5 HP
		if = {
			limit = {
				event_target:enemy_turn = {
					NOT = { check_variable = { which = combat_hp value = 5 } }
				}
			}
			set_variable = { which = option_name value = 1 }
			break = yes
		}
		# Swung wide
		if = {
			limit = {
				has_character_flag = status_swung_wide
			}
			set_variable = { which = option_name value = 3 }
			break = yes
		}
		# Less than 5 HP
		if = {
			limit = {
				NOT = { check_variable = { which = combat_hp value = 5 } }
			}
			set_variable = { which = option_name value = 4 }
			break = yes
		}
		# More HP than opponent
		if = {
			limit = {
				check_variable = { which = combat_hp which = event_target:enemy_turn }
			}
			set_variable = { which = option_name value = 5 }
			break = yes
		}
		# Default
		set_variable = { which = option_name value = 0 }
	}
	
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 1 }
		}
		name = EVTOPTA_CHALLENGE.41
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 2 }
		}
		name = EVTOPTB_CHALLENGE.41
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 3 }
		}
		name = EVTOPTC_CHALLENGE.41
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 4 }
		}
		name = EVTOPTD_CHALLENGE.41
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 5 }
		}
		name = EVTOPTE_CHALLENGE.41
	}
	option = {
		trigger = {
			is_variable_equal = { which = option_name value = 0 }
		}
		name = EVTOPTK_CHALLENGE.40
	}
	after = {
		hidden_tooltip = {
			set_variable = { which = option_name value = 0 }
			if = {
				limit = { character = event_target:first_turn }
				event_target:second_turn = {
					character_event = { id = CHALLENGE.42 days = 1 }
				}
			}
			if = {
				limit = { character = event_target:second_turn }
				event_target:challenged_party = {
					character_event = { id = CHALLENGE.59 days = 1 }
				}
			}
			clear_event_target = enemy_turn
		}
	}
}

# CHALLENGE.42 - Determine second turn event
character_event = {
	id = CHALLENGE.42
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			# Secret werewolf event
			6 = {
				modifier = {
					factor = 0
					trait = known_werewolf
				}
				modifier = {
					factor = 2
					trait = deceitful
				}
				modifier = {
					factor = 2
					trait = schemer
				}
				modifier = {
					factor = 0.5
					trait = shy
				}
				set_character_flag = event_secret_werewolf
				repeat_event = { id = CHALLENGE.43 days = 1 }
			}
			# Reserved for low control
			2 = {
				modifier = {
					factor = 0
					NAND = {
						trait = werewolf
						check_variable = { which = control value <= 3 }
					}
				}
				modifier = {
					factor = 1.5
					trait = werewolf
					check_variable = { which = control value <= 2 }
				}
				modifier = {
					factor = 2
					trait = werewolf
					check_variable = { which = control value == 1 }
				}
				set_character_flag = event_berserk
				repeat_event = { id = CHALLENGE.44 days = 1 }
			}
			# Untransformed werewolf can take turn to transform
			1 = {
				modifier = {
					factor = 0
					NAND = {
						trait = werewolf
						check_variable = { which = control value <= 3 }
					}
				}
				modifier = {
					factor = 1.5
					check_variable = { which = control value = 2 }
				}
				modifier = {
					factor = 2
					check_variable = { which = control value = 3 }
				}
				set_character_flag = event_transform
				repeat_event = { id = CHALLENGE.88 days = 1 }
			}
			# Take advantage of miss
			8 = {
				modifier = {
					factor = 0
					event_target:first_turn = {
						NOT = { has_character_flag = status_missed }
					}
				}
				modifier = {
					factor = 2
					trait = duelist
				}
				modifier = {
					factor = 2
					OR = {
						trait = genius
						trait = quick
						trait = shrewd
					}
				}
				modifier = {
					factor = 0.8
					OR = {
						trait = slow
						trait = dull
					}
				}
				modifier = {
					factor = 0.5
					trait = inbred
				}
				modifier = {
					factor = 0.2
					trait = imbecile
				}
				modifier = {
					factor = 0.7
					trait = stressed
				}
				modifier = {
					factor = 0.8
					trait = one_eyed
				}
				modifier = {
					factor = 0.2
					trait = blinded
				}
				set_character_flag = event_advantage_miss
				repeat_event = { id = CHALLENGE.45 days = 1 }
			}
			# Opponent defending
			8 = {
				modifier = {
					factor = 0
					event_target:first_turn = {
						NOR = {
							has_character_flag = choice_defend
							has_character_flag = choice_keep_distance
							has_character_flag = choice_catch_breath
						}
					}
				}
				modifier = {
					factor = 2
					OR = {
						trait = aggressive_leader
						trait = berserker
					}
				}
				set_character_flag = event_overcome_defense
				repeat_event = { id = CHALLENGE.46 days = 1 }
			}
			# Opponent swung wide
			16 = {
				modifier = {
					factor = 0
					event_target:first_turn = {
						NOT = { has_character_flag = status_swung_wide }
					}
				}
				modifier = {
					factor = 2
					trait = duelist
				}
				modifier = {
					factor = 2
					OR = {
						trait = genius
						trait = quick
						trait = shrewd
					}
				}
				modifier = {
					factor = 0.8
					OR = {
						trait = slow
						trait = dull
					}
				}
				modifier = {
					factor = 0.5
					trait = inbred
				}
				modifier = {
					factor = 0.2
					trait = imbecile
				}
				modifier = {
					factor = 0.7
					trait = stressed
				}
				modifier = {
					factor = 0.8
					trait = one_eyed
				}
				modifier = {
					factor = 0.2
					trait = blinded
				}
				set_character_flag = event_advantage_wide
				repeat_event = { id = CHALLENGE.47 days = 1 }
			}
			# Standard round
			4 = {
				modifier = { 
					factor = 1.25
					OR = {
						trait = slow
						trait = dull
						trait = inbred
						trait = imbecile
					}
				}
				modifier = {
					factor = 2
					trait = stubborn
				}
				set_character_flag = event_normal
				repeat_event = { id = CHALLENGE.48 days = 1 }
			}
			# Attacker has poor footing
			1 = {
				modifier = {
					factor = 2
					event_target:first_turn = {
						OR = {
							has_character_flag = choice_aggressive_attack
							has_character_flag = choice_ferocious_charge
							has_character_flag = choice_charge
							has_character_flag = choice_tackle
						}
						has_character_flag = status_missed
					}
				}
				modifier = {
					factor = 1.5
					event_target:first_turn = {
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						trait = drunkard
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						trait = one_legged
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						trait = clubfooted
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						trait = quailfooted
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						trait = dancing_plague
					}
				}
				modifier = {
					factor = 0.5
					event_target:first_turn = {
						trait = duelist
					}
				}
				# Required you to notice the opening
				modifier = {
					factor = 0.7
					trait = one_eyed
				}
				modifier = {
					factor = 0.1
					trait = blinded
				}
				set_character_flag = event_poor_footing
				repeat_event = { id = CHALLENGE.49 days = 1 }
			}
			# Intimidated
			1 = {
				modifier = {
					factor = 2
					trait = craven
				}
				modifier = {
					factor = 0.1
					trait = brave
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = 0 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -1 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -2 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -3 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -4 } }
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_morale value = -5 } }
				}
				set_character_flag = event_intimidated
				repeat_event = { id = CHALLENGE.50 days = 1 }
			}
			# Wounded
			2 = {
				modifier = {
					factor = 0
					NOR = {
						trait = wounded
						is_maimed_trigger = yes
						trait = chest_pain
						trait = cramps
						trait = abdominal_pain
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						has_character_flag = event_opponent_wounded
					}
				}
				modifier = {
					factor = 2
					is_maimed_trigger = yes
				}
				modifier = {
					factor = 2
					trait = severely_injured
				}
				modifier = {
					factor = 1.5
					NOT = { check_variable = { which = combat_hp value = 10 } }
				}
				modifier = {
					factor = 2
					has_character_flag = status_pain
				}
				set_character_flag = event_wounded
				repeat_event = { id = CHALLENGE.51 days = 1 }
			}
			# Opponent wounded
			2 = {
				modifier = {
					factor = 0
					event_target:first_turn = {
						NOR = {
							trait = wounded
							is_maimed_trigger = yes
							trait = chest_pain
							trait = cramps
							trait = abdominal_pain
							NOT = { check_variable = { which = combat_hp value = 10 } }
						}
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = {
						has_character_flag = event_wounded
					}
				}
				modifier = {
					factor = 2
					event_target:first_turn = { is_maimed_trigger = yes }
				}
				modifier = {
					factor = 2
					event_target:first_turn = { trait = severely_injured }
				}
				modifier = {
					factor = 1.5
					event_target:first_turn = { NOT = { check_variable = { which = combat_hp value = 10 } } }
				}
				set_character_flag = event_opponent_wounded
				repeat_event = { id = CHALLENGE.52 days = 1 }
			}
			# Magic
			2 = {
				modifier = {
					factor = 0
					NOR = {
						trait = novice_mage
						trait = eldritch_scholar
						trait = veteran_wizard
						trait = arcane_master
					}
				}
				modifier = {
					factor = 1.5
					event_target:first_turn = {
						has_character_flag = event_tired
					}
				}
				modifier = {
					factor = 1.5
					trait = arcane_master
				}
				modifier = {
					factor = 2
					OR = {
						trait = enchanter
						trait = summoner
					}
				}
				set_character_flag = event_magic
				repeat_event = { id = CHALLENGE.53 days = 1 }
			}
			# Tired
			1 = {
				modifier = {
					factor = 1.5
					trait = slothful
				}
				modifier = {
					factor = 1.5
					trait = gluttonous
				}
				modifier = {
					factor = 2
					NOT = { health = 3 }
				}
				modifier = {
					factor = 0.5
					OR = {
						trait = strong
						trait = robust
					}
				}
				modifier = {
					factor = 1.5
					trait = wounded
				}
				modifier = {
					factor = 3
					OR = {
						trait = fatigue
						trait = has_tuberculosis
						trait = has_typhus
						trait = flu
						trait = gout
						trait = rabies
						trait = cancer
					}
				}
				modifier = {
					factor = 2
					OR = {
						trait = weak
						trait = feeble
					}
				}
				modifier = {
					factor = 2
					has_character_flag = status_pain
				}
				set_character_flag = event_tired
				repeat_event = { id = CHALLENGE.54 days = 1 }
			}
			# Sabotage by supporter
			1 = {
				modifier = {
					factor = 0
					NOT = { check_variable = { which = supporters value = 1 } }
				}
				modifier = {
					factor = 1.5
					check_variable = { which = supporters which = event_target:first_turn }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 3 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 5 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 8 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 12 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 17 }
				}
				modifier = {
					factor = 1.2
					check_variable = { which = supporters value = 23 }
				}
				set_character_flag = event_sabotage
				repeat_event = { id = CHALLENGE.55 days = 1 }
			}
		}
	}
}

# CHALLENGE.43 - Second Turn - Secret Werewolf
character_event = {
	id = CHALLENGE.43
	desc = EVTDESCA_CHALLENGE.43
	desc = EVTDESCB_CHALLENGE.43
	desc = EVTDESCC_CHALLENGE.30
	picture = GFX_evt_werewolf_moon
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Shift and attack
	option = {
		name = EVTOPTA_CHALLENGE.30
		add_trait = known_werewolf
		hidden_tooltip = {
			remove_trait = secret_werewolf
			remove_character_modifier = known_monster
			set_character_flag = choice_shift_attack
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 5
			modifier = {
				factor = 2
				trait = deceitful
			}
			modifier = {
				factor = 2
				ai_ambition = 50
			}
		}
	}
	# Standard attack
	option = {
		name = EVTOPTB_CHALLENGE.30
		hidden_tooltip = {
			set_character_flag = choice_normal_attack
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = content
			}
		}
	}
	# Defend
	option = {
		name = EVTOPTC_CHALLENGE.30
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
		}
	}
	# Keep Distance
	option = {
		name = EVTOPTD_CHALLENGE.30
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				change_variable = { which = combat_defense value = 2 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = shy
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.44 - Second Turn - Reserved for low control characters
character_event = {
	id = CHALLENGE.44
	desc = EVTDESCA_WEREWOLF.31
	desc = EVTDESCB_CHALLENGE.31
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.31
		
		if = {
			limit = { 
				trait = werewolf
				has_character_flag = not_shapeshifted 
			}
			custom_tooltip = {
				text = tt_lose_shapeshift_penalty
				hidden_tooltip = {
					clr_character_flag = not_shapeshifted
				}
			}
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_defense_low
			hidden_tooltip = {
				subtract_variable = { which = combat_defense value = 1 }
			}
		}
		custom_tooltip = {
			text = TT_morale_low_1
			set_character_flag = attack_morale_1
		}
		hidden_tooltip = {
			set_character_flag = choice_berzerk
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.45 - Second Turn - Attacker Missed
character_event = {
	id = CHALLENGE.45
	desc = EVTDESC_CHALLENGE.45
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Undefended strike
	option = {
		name = EVTOPTA_CHALLENGE.45
		hidden_tooltip = {
			set_character_flag = choice_undefended_strike
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		custom_tooltip = {
			text = TT_ignore_armor
			hidden_tooltip = {
				set_character_flag = attack_ignore_defense
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.46 - Second Turn - Attacker defends
character_event = {
	id = CHALLENGE.46
	desc = EVTDESC_CHALLENGE.46
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Overpower their defense
	option = {
		name = EVTOPTA_CHALLENGE.46
		hidden_tooltip = {
			set_character_flag = choice_overpower
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_2
			hidden_tooltip = {
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				OR = {
					trait = aggressive_leader
					trait = berserker
				}
			}
			modifier = {
				factor = 2
				trait = wroth
			}
		}			
	}
	# Strike around
	option = {
		name = EVTOPTB_CHALLENGE.46
		hidden_tooltip = {
			set_character_flag = choice_strike_around
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 2
				trait = trickster
			}
		}
	}
	# Catch Breath
	option = {
		name = EVTOPTC_CHALLENGE.46
		hidden_tooltip = {
			set_character_flag = choice_catch_breath
			set_character_flag = status_no_attack
		}
		if = {
			limit = { trait = werewolf }
			random = {
				chance = 10
				if = {
					limit = { trait = wounded }
					remove_trait = wounded
					hidden_tooltip = {
						# Notify
						character_event = { id = MN.4 }
					}
				}
				change_variable = { which = combat_hp value = 1 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0.2
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 2
				trait = patient
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.47 - Second Turn - attacker swung wide
character_event = {
	id = CHALLENGE.47
	desc = EVTDESC_CHALLENGE.47
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Strike at arm
	option = {
		name = EVTOPTA_CHALLENGE.47
		hidden_tooltip = {
			set_character_flag = choice_strike_arm
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_maim_arm
			hidden_tooltip = {
				set_character_flag = attack_maim_arm
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
	# Strike at the body
	option = {
		name = EVTOPTB_CHALLENGE.47
		hidden_tooltip = {
			set_character_flag = choice_strike_body
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = honest
			}
			modifier = {
				factor = 2
				trait = diligent
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.48 - Second Turn - Standard Turn
character_event = {
	id = CHALLENGE.48
	desc = EVTDESCE_CHALLENGE.32
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Ferocious Charge
	option = {
		name = EVTOPTB_CHALLENGE.32
		hidden_tooltip = {
			set_character_flag = choice_ferocious_charge
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_morale_low_1
			set_character_flag = attack_morale_1
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = berserker
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}
	# Smite Infidel
	option = {
		trigger = {
			OR = {
				trait = zealous
				trait = holy_warrior
			}
			NOT = { religion_group = event_target:second_turn }
		}
		name = EVTOPTB_CHALLENGE.48
		hidden_tooltip = {
			set_character_flag = choice_smite_infidel
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = zealous
			}
			modifier = {
				factor = 2
				trait = holy_warrior
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				has_crusade_trait_trigger = yes
			}
		}
	}
	# Hack at limbs
	option = {
		trigger = { trait = cruel }
		name = EVTOPTC_CHALLENGE.48
		name = EVTOPTD_CHALLENGE.48
		tooltip_info = cruel
		hidden_tooltip = {
			set_character_flag = choice_hack_limbs
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_maim_chance
			hidden_tooltip = {
				set_character_flag = attack_maim
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = cannibal_trait
			}
			modifier = {
				factor = 2
				trait = lunatic
			}
			modifier = {
				factor = 2
				trait = impaler
			}
		}
	}
	# All out attack
	option = {
		trigger = {
			OR = {
				trait = aggressive_leader
				trait = berserker
				trait = wroth
			}
		}
		name = EVTOPTE_CHALLENGE.48
		hidden_tooltip = {
			set_character_flag = choice_all_out_attack
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_injure_self
			hidden_tooltip = {
				set_character_flag = status_high_wound
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = berserker
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
		}
	}
	# Heavy Blows
	option = {
		name = EVTOPTF_CHALLENGE.48
		hidden_tooltip = {
			set_character_flag = choice_heavy_blows
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 7 }
				divide_variable = { which = combat_accuracy value = 10 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 0.5
				trait = patient
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.49 - Second Turn - First turn has poor footing
character_event = {
	id = CHALLENGE.49
	desc = EVTDESCA_CHALLENGE.49
	desc = EVTDESCB_CHALLENGE.49
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Charge
	option = {
		name = EVTOPTA_CHALLENGE.49
		hidden_tooltip = {
			set_character_flag = choice_charge
		}
		custom_tooltip = {
			text = TT_attack_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = aggressive_leader
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
	# Tackle
	option = {
		name = EVTOPTB_CHALLENGE.49
		hidden_tooltip = {
			set_character_flag = choice_tackle
		}
		custom_tooltip = {
			text = TT_attack_low_3
			hidden_tooltip = {
				divide_variable = { which = combat_damage value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_wound_chance
			hidden_tooltip = {
				set_character_flag = attack_wound
			}
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = arbitrary
			}
		}
	}
	# All effort swing
	option = {
		name = EVTOPTC_CHALLENGE.33
		hidden_tooltip = {
			set_character_flag = choice_all_effort_swing
		}
		custom_tooltip = {
			text = TT_attack_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 3 }
			}
		}
		custom_tooltip = {
			text = TT_bad_miss
			hidden_tooltip = {
				set_character_flag = status_wild_chance
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = proud
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.50 - Second Turn - Intimidated
character_event = {
	id = CHALLENGE.50
	desc = EVTDESCA_CHALLENGE.39
	desc = EVTDESCB_CHALLENGE.50
	desc = EVTDESCC_CHALLENGE.39
	picture = GFX_evt_lunatic
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Flee
	option = {
		name = EVTOPTA_CHALLENGE.39
		name = EVTOPTE_CHALLENGE.39
		name = EVTOPTF_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_flee
		}
		if = {
			limit = { trait = brave }
			remove_trait = brave
		}
		if = {
			limit = { NOT = { trait = craven } }
			add_trait = craven
		}
		# Inform first turn of the flight
		character_event = { id = CHALLENGE.40 days = 1 }
		# Determine who fled and send proper events
		if = {
			# Challenger fled
			limit = { character = event_target:challenger }
			if = {
				limit = {
					event_target:challenged_party = { has_character_flag = defending_party }
				}
				event_target:challenged_party = { character_event = { id = CHALLENGE.66 days = 2 } }
			}
			else = {
				event_target:champion = { character_event = { id = CHALLENGE.66 days = 2 } }
			}
			character_event = { id = CHALLENGE.73 days = 2 }
		}
		if = {
			# Defender fled
			limit = { has_character_flag = defending_party }
			event_target:challenger = {
				character_event = { id = CHALLENGE.61 days = 2 }
			}
			character_event = { id = CHALLENGE.73 days = 2 }
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { check_variable = { which = combat_morale value = -3 } }
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.5
				ai_ambition = 40
			}
		}
	}
	# Focus on defense
	option = {
		trigger = {
			check_variable = { which = combat_defense value = 0.7 }
		}
		name = EVTOPTB_CHALLENGE.39
		hidden_tooltip = {
			set_character_flag = choice_defend
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 3 }
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Keep distance
	option = {
		trigger = {
			NOT = { check_variable = { which = combat_defense value = 0.7 } }
		}
		name = EVTOPTC_CHALLENGE.50
		hidden_tooltip = {
			set_character_flag = choice_keep_distance
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_evade
			hidden_tooltip = {
				set_character_flag = status_evade
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Cautious attack
	option = {
		name = EVTOPTD_CHALLENGE.50
		hidden_tooltip = {
			set_character_flag = choice_cautious_attack
		}
		custom_tooltip = {
			text = TT_attack_low_2
			hidden_tooltip = {
				divide_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_low_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 7 }
				divide_variable = { which = combat_accuracy value = 10 }
			}
		}
		custom_tooltip = {
			text = TT_defense_high
			hidden_tooltip = {
				multiply_variable = { which = combat_defense value = 2 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			if = {
				limit = {
					NOT = {
						has_character_flag = choice_flee
					}
				}
				# Set turn variables
				event_target:first_turn = { save_event_target_as = enemy_turn }
				# Call event to calculate turn result
				repeat_event = { id = CHALLENGE.78 days = 1 }
			}
		}
	}
}

# CHALLENGE.51 - Second Turn - Wounded
character_event = {
	id = CHALLENGE.51
	desc = EVTDESC_CHALLENGE.35
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Catch Breath
	option = {
		name = EVTOPTA_CHALLENGE.51
		hidden_tooltip = {
			set_character_flag = choice_catch_breath
			set_character_flag = status_no_attack
		}
		if = {
			limit = { trait = werewolf }
			random = {
				chance = 10
				if = {
					limit = { trait = wounded }
					remove_trait = wounded
					hidden_tooltip = {
						# Notify
						character_event = { id = MN.4 }
					}
				}
				change_variable = { which = combat_hp value = 1 }
			}
		}
	}
	# Push through
	option = {
		name = EVTOPTC_CHALLENGE.35
		hidden_tooltip = {
			set_character_flag = choice_push_through_pain
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_injure_self
			hidden_tooltip = {
				set_character_flag = status_high_wound
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = proud
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.52 - Second Turn - Opponent Wounded
character_event = {
	id = CHALLENGE.52
	desc = EVTDESC_CHALLENGE.52
	picture = GFX_evt_werewolf_fight
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Oppotunistic blow
	option = {
		name = EVTOPTA_CHALLENGE.52
		hidden_tooltip = {
			set_character_flag = choice_opportunistic_blow
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = duelist
			}
			modifier = {
				factor = 2
				trait = diligent
			}
		}
	}
	# Make injury worse
	option = {
		name = EVTOPTB_CHALLENGE.52
		hidden_tooltip = {
			set_character_flag = choice_worsen_injury
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_maim_chance
			hidden_tooltip = {
				set_character_flag = attack_maim
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = cannibal_trait
			}
		}
	}
	# Press hard
	option = {
		name = EVTOPTC_CHALLENGE.52
		hidden_tooltip = {
			set_character_flag = choice_press_injury
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_morale_low_2
			hidden_tooltip = {
				set_character_flag = attack_morale_2
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = brave
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.53 - Second Turn - Magic
character_event = {
	id = CHALLENGE.53
	desc = EVTDESC_CHALLENGE.36
	picture = GFX_evt_magic_ritual
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Fear Illusion
	option = {
		trigger = { trait = enchanter }
		name = EVTOPTA_CHALLENGE.53
		tooltip_info = enchanter
		hidden_tooltip = {
			set_character_flag = choice_fear_illusion
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_morale_low_3
			hidden_tooltip = {
				event_target:first_turn = {
					subtract_variable = { which = combat_morale value = 3 }
				}
			}
		}
		custom_tooltip = {
			text = TT_lower_damage
			hidden_tooltip = {
				event_target:first_turn = {
					multiply_variable = { which = combat_damage value = 7 }
					divide_variable = { which = combat_damage value = 10 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
	# Illusion Copy
	option = {
		name = EVTOPTB_CHALLENGE.53
		hidden_tooltip = {
			set_character_flag = choice_illusion_copy
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		custom_tooltip = {
			text = TT_accuracy_high_3
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
			}
		}
		ai_chance = {
			factor = 1
		}
	}
	# Summon Spectral Warrior
	option = {
		name = EVTOPTC_CHALLENGE.36
		trigger = { trait = summoner }
		tooltip_info = summoner
		hidden_tooltip = {
			set_character_flag = choice_spectral_warrior
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = combat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_accuracy_high_1
			hidden_tooltip = {
				multiply_variable = { which = combat_accuracy value = 3 }
				divide_variable = { which = combat_accuracy value = 2 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
	}
	# Addle Senses
	option = {
		name = EVTOPTD_CHALLENGE.53
		hidden_tooltip = {
			set_character_flag = choice_addle_senses
			set_character_flag = status_no_attack
		}
		custom_tooltip = {
			text = TT_addle_senses
			hidden_tooltip = {
				event_target:first_turn = {
					set_character_flag = status_addled_senses
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = patient
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.54 - Second Turn - Tired
character_event = {
	id = CHALLENGE.54
	desc = EVTDESCA_CHALLENGE.37
	desc = EVTDESCB_CHALLENGE.37
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Catch Breath
	option = {
		name = EVTOPTA_CHALLENGE.37
		hidden_tooltip = {
			set_character_flag = choice_catch_breath
			set_character_flag = status_no_attack
		}
		if = {
			limit = { trait = werewolf }
			random = {
				chance = 10
				if = {
					limit = { trait = wounded }
					remove_trait = wounded
					hidden_tooltip = {
						# Notify
						character_event = { id = MN.4 }
					}
				}
				change_variable = { which = combat_hp value = 1 }
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.55 - Second Turn - Supporter Sabotage
character_event = {
	id = CHALLENGE.55
	desc = EVTDESCA_CHALLENGE.55
	desc = EVTDESCB_CHALLENGE.55
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Strike Opening
	option = {
		trigger = { NOT = { trait = honest } }
		name = EVTOPTA_CHALLENGE.38
		hidden_tooltip = {
			set_character_flag = choice_strike_opening
		}
		custom_tooltip = {
			text = TT_attack_high_2
			hidden_tooltip = {
				multiply_variable = { which = coimbat_damage value = 2 }
			}
		}
		custom_tooltip = {
			text = TT_wound_chance
			hidden_tooltip = {
				set_character_flag = attack_wound
			}
		}
		if = {
			limit = { NOT = { trait = deceitful } }
			random = {
				chance = 30
				add_trait = deceitful
				hidden_tooltip = {
					# Notify
					character_event = { id = 38255 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 4
				trait = deceitful
			}
		}
	}
	# Fight honorably
	option = {
		name = EVTOPTB_CHALLENGE.38
		hidden_tooltip = {
			set_character_flag = choice_fight_honorably
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		prestige = 10
		if = {
			limit = {
				NOR = {
					trait = honest
					trait = deceitful
				}
			}
			random = {
				chance = 30
				add_trait = honest
				hidden_tooltip = {
					# Notify
					character_event = { id = 38262 }
				}
			}
		}
		if = {
			limit = {
				trait = deceitful
			}
			random = {
				chance = 30
				remove_trait = deceitful
				hidden_tooltip = {
					# Notify
					character_event = { id = 38255 }
				}
			}
		}
		ai_chance = {
		 factor = 1
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			repeat_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}

# CHALLENGE.56 - Inform of battle start
character_event = {
	id = CHALLENGE.56
	desc = EVTDESC_CHALLENGE.56
	picture = GFX_evt_rival_rulers
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.56
	}
}

# CHALLENGE.57 - Merged into CHALLENGE.40
# CHALLENGE.58 - Merged into CHALLENGE.41

# CHALLENGE.59 - Check fight conditions and determine winner or loser
character_event = {
	id = CHALLENGE.59
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# Clear turn order
		clear_event_target = first_turn
		clear_event_target = second_turn
		# Make sure the title hasn't been taken in an unrelated event
		event_target:challenged_title = {
			holder_scope = {
				if = {
					limit = { NOT = { character = ROOT } }
					# Title has been lost - abort!
					character_event = { id = CHALLENGE.82 }
					break = yes
				}
			}
		}
		# Both dead
		if = {
			limit = {
				event_target:challenger = {
					NOT = { check_variable = { which = combat_hp value = 0 } }
				}
				event_target:champion = {
					NOT = { check_variable = { which = combat_hp value = 0 } }
				}
			}
			event_target:challenger = {
				character_event = { id = CHALLENGE.81 days = 1 }
			}
			event_target:champion = {
				character_event = { id = CHALLENGE.81 days = 1 }
			}
			if = {
				limit = {
					NOT = { character = event_target:champion }
				}
				repeat_event = { id = CHALLENGE.77 days = 1 }
			}
			break = yes
		}
		# Challenger wins
		if = {
			limit = {
				event_target:champion = {
					NOT = { check_variable = { which = combat_hp value = 0 } }
				}
			}
			repeat_event = { id = CHALLENGE.60 days = 1 }
			break = yes
		}
		# Champion wins
		if = {
			limit = {
				event_target:challenger = {
					NOT = { check_variable = { which = combat_hp value = 0 } }
				}
			}
			repeat_event = { id = CHALLENGE.65 days = 1 }
			break = yes
		}
		# The fight continues. Each party has a chance to be injured.  Don't break after this.
		event_target:challenger = {
			random_list = {
				4 = {
					# No injury
				}
				1 = {
					modifier = {
						factor = 1.2
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
					modifier = {
						factor = 1.1
						NOT = { check_variable = { which = combat_hp value = 5 } }
					}
					modifier = {
						factor = 4
						has_character_flag = status_high_wound
					}
					modifier = {
						factor = 4
						has_character_flag = status_high_maim
					}
					character_event = { id = CHALLENGE.71 }
				}
			}
		}
		event_target:champion = {
			random_list = {
				4 = {
					# No injury
				}
				1 = {
					modifier = {
						factor = 1.2
						NOT = { check_variable = { which = combat_hp value = 10 } }
					}
					modifier = {
						factor = 1.1
						NOT = { check_variable = { which = combat_hp value = 5 } }
					}
					modifier = {
						factor = 4
						has_character_flag = status_high_wound
					}
					modifier = {
						factor = 4
						has_character_flag = status_high_maim
					}
					character_event = { id = CHALLENGE.71 }
				}
			}
		}
		# Challenger feels weak, chance to surrender
		event_target:challenger = {
			event_target:champion = {
				set_variable = { which = temp_dam which = combat_damage }
			}
			set_variable = { which = temp_dam which = event_target:champion }
			event_target:champion = {
				set_variable = { which = temp_dam value = 0 }
			}
			set_variable = { which = weak_hp which = temp_dam }
			set_variable = { which = temp_dam value = 0 }
			if = {
				limit = { trait = craven }
				multiply_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = 0 } } }
				multiply_variable = { which = weak_hp value = 3 }
				divide_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -1 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -2 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -3 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -4 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -5 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = { # Less likely to notice the danger
				limit = { 
					OR = { 
						trait = dull
						trait = slow
					}
				}
				divide_variable = { which = weak_hp value = 2 }
			}
			if = { # Less likely to notice the danger
				limit = { trait = imbecile }
				divide_variable = { which = weak_hp value = 3 }
			}
			if = { # Less likely to notice the danger
				limit = { trait = inbred }
				divide_variable = { which = weak_hp value = 3 }
				multiply_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { check_variable = { which = weak_hp which = combat_hp } }
				set_character_flag = status_weak
			}
		}
		event_target:champion = {
			event_target:challenger = {
				set_variable = { which = temp_dam which = combat_damage }
			}
			set_variable = { which = temp_dam which = event_target:challenger }
			event_target:challenger = {
				set_variable = { which = temp_dam value = 0 }
			}
			set_variable = { which = weak_hp which = temp_dam }
			set_variable = { which = temp_dam value = 0 }
			if = {
				limit = { trait = craven }
				multiply_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = 0 } } }
				multiply_variable = { which = weak_hp value = 3 }
				divide_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -1 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -2 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -3 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -4 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_morale value = -5 } } }
				multiply_variable = { which = weak_hp value = 11 }
				divide_variable = { which = weak_hp value = 10 }
			}
			if = { # Less likely to notice the danger
				limit = { 
					OR = { 
						trait = dull
						trait = slow
					}
				}
				divide_variable = { which = weak_hp value = 2 }
			}
			if = { # Less likely to notice the danger
				limit = { trait = imbecile }
				divide_variable = { which = weak_hp value = 3 }
			}
			if = { # Less likely to notice the danger
				limit = { trait = inbred }
				divide_variable = { which = weak_hp value = 3 }
				multiply_variable = { which = weak_hp value = 2 }
			}
			if = {
				limit = { check_variable = { which = weak_hp which = combat_hp } }
				set_character_flag = status_weak
			}
		}
		# Challenger feels weak (Also handles both feeling weak)
		event_target:challenger = {
			if = {
				limit = { has_character_flag = status_weak }
				character_event = { id = CHALLENGE.72 days = 1 }
				break = yes
			}
		}
		# Champion feels weak, challenger does not
		event_target:champion = {
			if = {
				limit = { has_character_flag = status_weak }
				character_event = { id = CHALLENGE.74 days = 1 }
				break = yes
			}
		}
		# Neither feel weak - loop to the next round
		repeat_event = { id = CHALLENGE.28 days = 2 }
	}
}

# CHALLENGE.60 - Challenger wins.  Defender may die
character_event = {
	id = CHALLENGE.60
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		log = "[challenger.GetTitledName] won the challenge against [challenged_party.GetTitledName]."
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		# Inform Challenger of victory
		event_target:challenger = {
			character_event = { id = CHALLENGE.61 days = 1 }
		}
		# Inform champion of loss - may die
		event_target:champion = {
			random_list = {
				1 = {
					modifier = {
						factor = 1.5
						NOT = { health = 3 }
					}
					modifier = {
						factor = 1.5
						NOT = { health = 2 }
					}
					modifier = {
						factor = 1.5
						NOT = { health = 1 }
					}
					modifier = {
						factor = 1.1
						trait = maimed
					}
					modifier = {
						factor = 1.1
						trait = severely_injured
					}
					# Loser dies.  If this is the challenged party, wait 1 day to inform to avoid titles moving through inheritance.
					if = {
						limit = { character = ROOT }
						character_event = { id = CHALLENGE.63 days = 1 }
					}
					if = {
						limit = { NOT = { character = ROOT } }
						character_event = { id = CHALLENGE.63 }
					}
				}
				2 = {
					# Loser injured, but survives
					character_event = { id = CHALLENGE.64 }
				}
			}
		}
	}
}

# CHALLENGE.61 - Challenger win.  Usurp title
character_event = {
	id = CHALLENGE.61
	desc = EVTDESC_CHALLENGE.61
	picture = GFX_evt_powerful_ruler
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		event_target:challenger = { combat_cleanup = yes }
		event_target:champion = { combat_cleanup = yes }
		event_target:challenged_party = { remove_character_modifier = facing_challenge }
	}
	
	option = {
		name = EVTOPTA_CHALLENGE.61
		event_target:challenged_title = {
			usurp_title = ROOT
		}
		hidden_tooltip = {
			reverse_opinion = { who = event_target:challenged_party modifier = opinion_usurped_title }
		}
		prestige = 100
	}
	
	after = {
		hidden_tooltip = {
			# Inform Title's previous holder, if not the champion, who already knows
			event_target:challenged_party = {
				if = {
					limit = { NOT = { character = event_target:champion } }
					character_event = { id = CHALLENGE.62 }
				}
			}
			# Inform new vassals
			event_target:challenged_title = {
				any_vassal = {
					limit = { NOT = { character = event_target:challenged_party } }
					character_event = { id = CHALLENGE.76 }
				}
			}
		}
	}
}

# CHALLENGE.62 - Inform challenged party that they lost the title
character_event = {
	id = CHALLENGE.62
	desc = EVTDESC_CHALLENGE.62
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		event_target:challenger = { combat_cleanup = yes }
		event_target:champion = { combat_cleanup = yes }
		event_target:challenged_party = { remove_character_modifier = facing_challenge }
	}
	
	option = {
		trigger = { 
			OR = {
				NOT = { trait = content }
				is_landed = no
			}
		}
		name = EVTOPTA_CHALLENGE.62
		prestige = -100
		random_list = {
			7 = {}
			2 = {
				if = {
					limit = { NOT = { trait = stressed } }
					add_trait = stressed
					hidden_tooltip = {
						# Notify
						character_event = { id = 38282 }
					}
				}
			}
			1 = {
				if = {
					limit = { NOT = { trait = depressed } }
					add_trait = depressed
					hidden_tooltip = {
						# Notify
						character_event = { id = 38288 }
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			trait = content
			is_landed = yes
		}
		name = EVTOPTB_CHALLENGE.62
		prestige = -100
		tooltip_info = content
	}
}

# CHALLENGE.63 - Champion dies from challenge
character_event = {
	id = CHALLENGE.63
	desc = EVTDESC_CHALLENGE.63
	picture = GFX_evt_died_battle
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.63
		death = { death_reason = death_duel }
	}
}

# CHALLENGE.64 - Champion loses and is injured
character_event = {
	id = CHALLENGE.64
	desc = EVTDESC_CHALLENGE.64
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.63
		add_blood_splatter_effect = yes
		prestige = -100
		random_list = {
			3 = { } # No Injury
			6 = {
				trigger = { NOT = { trait = wounded } }
				add_wounded_effect = yes
			}
			1 = {
				trigger = {
					NOR = {
						has_dlc = "Reapers"
						trait = maimed
					}
				}
				add_trait = maimed
				apply_random_minor_injury_effect = yes
				hidden_tooltip = {
					# Nofity
					character_event = { id = 38281 }
				}
			}
			1 = {
				trigger = {
					has_dlc = "Reapers"
					NAND = {
						trait = one_eyed
						trait = one_legged
						trait = one_handed
						trait = disfigured
						trait = mangled
					}
				}
				random_list = {
					1 = {
						trigger = { NOT = { trait = one_eyed } }
						add_trait = one_eyed
					}
					1 = {
						trigger = { NOT = { trait = one_legged } }
						add_trait = one_legged
					}
					1 = {
						trigger = { NOT = { trait = one_handed } }
						add_trait = one_handed
					}
					1 = {
						trigger = { NOT = { trait = disfigured } }
						add_trait = disfigured
					}
					1 = {
						trigger = { NOT = { trait = mangled } }
						add_trait = mangled
					}
				}
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			2 = { apply_random_minor_injury_effect = yes }
		}
	}
}

# CHALLENGE.65 - Champion wins, handle events
character_event = {
	id = CHALLENGE.65
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[champion.GetTitledName] won the challenge against [challenger.GetTitledName]."
		# Inform Champion of victory
		event_target:champion = {
			character_event = { id = CHALLENGE.66 }
		}
		# Inform challenger of loss - may die
		event_target:challenger = {
			random_list = {
				1 = {
					modifier = {
						factor = 1.5
						NOT = { health = 3 }
					}
					modifier = {
						factor = 1.5
						NOT = { health = 2 }
					}
					modifier = {
						factor = 1.5
						NOT = { health = 1 }
					}
					modifier = {
						factor = 1.1
						trait = maimed
					}
					modifier = {
						factor = 1.1
						trait = severely_injured
					}
					# Loser dies.
					character_event = { id = CHALLENGE.69 }
				}
				2 = {
					# Loser injured, but survives
					character_event = { id = CHALLENGE.70 }
				}
			}
		}
	}
}

# CHALLENGE.66 - Defender wins
character_event = {
	id = CHALLENGE.66
	desc = EVTDESC_CHALLENGE.66
	picture = GFX_evt_powerful_ruler
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		event_target:challenger = { combat_cleanup = yes }
		event_target:champion = { combat_cleanup = yes }
		event_target:challenged_party = { remove_character_modifier = facing_challenge }
	}
	
	# Usurp
	option = {
		trigger = {
			has_character_flag = defending_party
			NOT = { character = event_target:challenged_party }
		}
		name = EVTOPTA_CHALLENGE.66
		event_target:challenged_title = {
			usurp_title = ROOT
		}
		hidden_tooltip = {
			reverse_opinion = { who = event_target:challenged_party modifier = opinion_usurped_title }
		}
		prestige = 100
	}
	
	# Defended for liege
	option = {
		trigger = {
			NOT = { has_character_flag = defending_party }
			NOT = { character = event_target:challenged_party }
		}
		name = EVTOPTB_CHALLENGE.66
		prestige = 100
	}
	
	# Defend title for self
	option = {
		trigger = {
			character = event_target:challenged_party
		}
		name = EVTOPTC_CHALLENGE.66
		prestige = 100
	}
	
	after = {
		hidden_tooltip = {
			event_target:challenged_party = { remove_character_modifier = facing_challenge }
			# If usurped
			if = {
				limit = {
					has_character_flag = defending_party
					NOT = { character = event_target:challenged_party }
				}
				# Inform new vassals
				event_target:challenged_title = {
					any_vassal = {
						limit = { NOT = { character = event_target:challenged_party } }
						character_event = { id = CHALLENGE.76 }
					}
				}
				# Inform usurped ruler
				event_target:challenged_party = {
					character_event = { id = CHALLENGE.68 }
				}
			}
			# If defending for liege
			if = {
				limit = {
					NOT = { has_character_flag = defending_party }
					NOT = { character = event_target:challenged_party }
				}
				event_target:challenged_party = {
					character_event = { id = CHALLENGE.67 }
				}
			}
		}
	}
}

# CHALLENGE.67 - Inform challenged that their title is defended
character_event = {
	id = CHALLENGE.67
	desc = EVTDESC_CHALLENGE.67
	picture = GFX_evt_powerful_ruler
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.67
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		opinion = { who = event_target:champion modifier = opinion_my_saviour }
		hidden_tooltip = {
			character_event = { id = CHALLENGE.84 days = 5 }
		}
	}
}

# CHALLENGE.68 - Another person usurped your title
character_event = {
	id = CHALLENGE.68
	desc = EVTDESC_CHALLENGE.68
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	immediate = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		event_target:challenger = { combat_cleanup = yes }
		event_target:champion = { combat_cleanup = yes }
		event_target:challenged_party = { remove_character_modifier = facing_challenge }
	}
	
	option = {
		trigger = { 
			OR = {
				NOT = { trait = content }
				is_landed = no
			}
		}
		name = EVTOPTA_CHALLENGE.68
		prestige = -100
		random_list = {
			7 = {}
			2 = {
				if = {
					limit = { NOT = { trait = stressed } }
					add_trait = stressed
					hidden_tooltip = {
						# Nofity
						character_event = { id = 38282 }
					}
				}
			}
			1 = {
				if = {
					limit = { NOT = { trait = depressed } }
					add_trait = depressed
					hidden_tooltip = {
						# Nofity
						character_event = { id = 38288 }
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			trait = content
			is_landed = yes
		}
		name = EVTOPTB_CHALLENGE.62
		prestige = -100
		tooltip_info = content
	}
}

# CHALLENGE.69 - Challenger dies
character_event = {
	id = CHALLENGE.69
	desc = EVTDESC_CHALLENGE.69
	picture = GFX_evt_died_battle
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.69
		death = { death_reason = death_duel }
	}
}

# CHALLENGE.70 - Challenger loses, injured
character_event = {
	id = CHALLENGE.70
	desc = EVTDESC_CHALLENGE.70
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.70
		prestige = -100
		random_list = {
			3 = { } # No Injury
			6 = {
				trigger = { NOT = { trait = wounded } }
				add_wounded_effect = yes
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					NAND = {
						has_dlc = "Reapers"
						trait = maimed
					}
				}
				add_trait = maimed
				hidden_tooltip = {
					# Nofity
					character_event = { id = 38281 }
					add_blood_splatter_effect = yes
				}
			}
			1 = {
				trigger = {
					has_dlc = "Reapers"
					NAND = {
						trait = one_eyed
						trait = one_legged
						trait = one_handed
						trait = disfigured
						trait = mangled
					}
				}
				random_list = {
					1 = {
						trigger = { NOT = { trait = one_eyed } }
						add_trait = one_eyed
					}
					1 = {
						trigger = { NOT = { trait = one_legged } }
						add_trait = one_legged
					}
					1 = {
						trigger = { NOT = { trait = one_handed } }
						add_trait = one_handed
					}
					1 = {
						trigger = { NOT = { trait = disfigured } }
						add_trait = disfigured
					}
					1 = {
						trigger = { NOT = { trait = mangled } }
						add_trait = mangled
					}
				}
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
				add_blood_splatter_effect = yes
			}
			2 = { apply_random_minor_injury_effect = yes }
		}
	}
}

# CHALLENGE.71 - Fight continues, but you are injured
character_event = {
	id = CHALLENGE.71
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			# Wounded
			15 = {
				modifier = {
					factor = 0.1
					has_character_flag = status_high_maim
				}
				modifier = {
					factor = 2
					has_character_flag = status_high_wound
				}
				modifier = {
					factor = 0
					trait = wounded
				}
				set_character_flag = status_gain_wound
				add_blood_splatter_effect = yes
			}
			5 = {
				trigger = { NOT = { has_dlc = Reapers } }
				set_character_flag = status_gain_maim
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					has_dlc = Reapers
					NOT = { trait = one_eyed }
				}
				set_character_flag = status_gain_one_eyed
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					has_dlc = Reapers
					NOT = { trait = one_handed }
				}
				set_character_flag = status_gain_one_handed
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					has_dlc = Reapers
					NOT = { trait = one_legged }
				}
				set_character_flag = status_gain_one_legged
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					has_dlc = Reapers
					NOT = { trait = disfigured }
				}
				set_character_flag = status_gain_disfigured
				add_blood_splatter_effect = yes
			}
			1 = {
				trigger = {
					has_dlc = Reapers
					NOT = { trait = mangled }
				}
				set_character_flag = status_gain_mangled
				add_blood_splatter_effect = yes
			}
			20 = {
				modifier = {
					factor = 0.01
					has_character_flag = status_high_maim
				}
				modifier = {
					factor = 0.3
					has_character_flag = status_high_wound
				}
				decide_minor_injury = yes
			}
		}
		character_event = { id = CHALLENGE.80 }
	}
}

# CHALLENGE.72 - Challenger can surrender
character_event = {
	id = CHALLENGE.72
	desc = EVTDESCA_CHALLENGE.72
	desc = EVTDESCB_CHALLENGE.72
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Surrender
	option = {
		name = EVTOPTA_CHALLENGE.72
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[challenger.GetTitledName] has surrendered to [challenged_party.GetTitledName]."
		custom_tooltip = {
			text = TT_forfeit_challenge
			hidden_tooltip = {
				event_target:champion = {
					character_event = { id = CHALLENGE.66 days = 1 }
				}
				character_event = { id = CHALLENGE.73 days = 1 }
			}
		}
		if = {
			limit = {
				NOR = {
					trait = brave
					trait = craven
				}
			}
			random = {
				chance = 30
				add_trait = craven
				hidden_tooltip = {
					# Notify
					character_event = { id = 38257 }
				}
			}
		}
		if = {
			limit = { trait = brave }
			random = {
				chance = 60
				remove_trait = brave
				hidden_tooltip = {
					# Notify
					character_event = { id = MN.3 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = 0 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -1 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -2 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -3 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -4 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -5 } }
			}
		}
	}
	# Keep fighting
	option = {
		name = EVTOPTB_CHALLENGE.72
		hidden_tooltip = {
			if = {
				limit = {
					event_target:champion = {
						has_character_flag = status_weak
					}
				}
				event_target:champion = {
					character_event = { id = CHALLENGE.74 days = 1 }
				}
			}
			if = {
				limit = {
					event_target:champion = {
						NOT = { has_character_flag = status_weak }
					}
				}
				event_target:challenged_party = {
					character_event = { id = CHALLENGE.28 days = 1 }
				}
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 1 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 2 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 3 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 4 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 5 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 6 }
			}
		}
	}
}

# CHALLENGE.73 - Lose, uninjured
character_event = {
	id = CHALLENGE.73
	desc = EVTDESC_CHALLENGE.73
	picture = GFX_evt_humiliation_prisoner
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		name = EVTOPTA_CHALLENGE.73
		prestige = -200
	}
}

# Champion can surrender
character_event = {
	id = CHALLENGE.74
	desc = EVTDESCA_CHALLENGE.72
	desc = EVTDESCB_CHALLENGE.72
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Surrender
	option = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[champion.GetTitledName] won the challenge against [challenger.GetTitledName]."
		name = EVTOPTA_CHALLENGE.72
		custom_tooltip = {
			text = TT_forfeit_challenge
			hidden_tooltip = {
				event_target:challenger = {
					character_event = { id = CHALLENGE.61 days = 1 }
				}
				character_event = { id = CHALLENGE.73 days = 1 }
			}
		}
		if = {
			limit = {
				NOR = {
					trait = brave
					trait = craven
				}
			}
			random = {
				chance = 30
				add_trait = craven
				hidden_tooltip = {
					# Notify
					character_event = { id = 38257 }
				}
			}
		}
		if = {
			limit = { trait = brave }
			random = {
				chance = 60
				remove_trait = brave
				hidden_tooltip = {
					# Notify
					character_event = { id = MN.3 }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = 0 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -1 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -2 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -3 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -4 } }
			}
			modifier = {
				factor = 1.2
				NOT = { check_variable = { which = combat_morale value = -5 } }
			}
		}
	}
	# Keep fighting
	option = {
		name = EVTOPTB_CHALLENGE.72
		hidden_tooltip = {
			event_target:challenged_party = {
				character_event = { id = CHALLENGE.28 days = 1 }
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 1 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 2 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 3 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 4 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 5 }
			}
			modifier = {
				factor = 1.2
				check_variable = { which = combat_morale value = 6 }
			}
		}
	}
}

# CHALLENGE.75 - Merged with CHALLENGE.73

# CHALLENGE.76 - Inform vassals of new liege
character_event = {
	id = CHALLENGE.76
	desc = EVTDESC_CHALLENGE.76
	picture = GFX_evt_holy_emperor
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Information event, AI doesn't need it
	ai = no
	
	option = {
		name = EVTOPTA_CHALLENGE.76
	}
}

# CHALLENGE.77 - Both combatants are dead. Presumably not the challenged party, or no one will get this event
character_event = {
	id = CHALLENGE.77
	desc = EVTDESC_CHALLENGE.77
	picture = GFX_evt_died_battle
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Information event, AI doesn't need it
	ai = no
	
	# Champion died
	option = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[challenger.GetTitledName] and [champion.GetTitledName] both died."
		name = EVTOPTA_CHALLENGE.77
		trigger = {
			has_character_flag = defending_party
		}
	}
	
	# Second challenger died
	option = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[challenger.GetTitledName] and [champion.GetTitledName] both died."
		name = EVTOPTB_CHALLENGE.77
		trigger = {
			NOT = {
				has_character_flag = defending_party
			}
		}
	}
}

# CHALLENGE.78 - First Turn - Calculate results of attack - IMPORTANT: Make sure enemy_turn is set first
character_event = {
	id = CHALLENGE.78
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		# Is there an attack at all?
		if = {
			limit = { has_character_flag = status_no_attack }
			event_target:enemy_turn = { character_event = { id = CHALLENGE.40 } }
			character_event = { id = CHALLENGE.41 }
			break = yes
		}
		# Check accuracy
		if = {
			limit = { event_target:enemy_turn = { has_character_flag = status_evade } }
			subtract_variable = { which = combat_accuracy value = 2 }
		}
		random_list = {
			# Miss
			3 = {
				# Auto hit at accuracy 14
				modifier = {
					factor = 0
					check_variable = { which = combat_accuracy value = 14 }
				}
				set_character_flag = status_missed
				if = {
					limit = { has_character_flag = status_wild_chance }
					random = {
						chance = 60
						set_character_flag = status_swung_wide
					}
				}
				event_target:enemy_turn = { character_event = { id = CHALLENGE.40 } }
				character_event = { id = CHALLENGE.41 }
				break = yes
			}
			2 = {
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 1 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 2 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 3 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 4 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 5 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 6 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 7 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 8 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 9 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 10 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 11 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 12 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 13 }
				}
				modifier = {
					factor = 1.3
					check_variable = { which = combat_accuracy value = 14 }
				}
				# Hit! Keep going.
			}
		}
		# Adjust damage for defense
		if = {
			limit = { NOT = { has_character_flag = attack_ignore_defense } }
			event_target:enemy_turn = {
				set_variable = { which = temp which = combat_defense }
			}
			set_variable = { which = temp which = event_target:enemy_turn }
			event_target:enemy_turn = { 
				set_variable = { which = combat_damage which = temp }
			}
			if = {
				limit = { NOT = { check_variable = { which = combat_damage value = 1 } } }
				set_variable = { which = combat_damage value = 1 }
			}
		}
		# Deal Damage
		set_variable = { which = temp which = combat_damage }
		event_target:enemy_turn = {
			set_variable = { which = temp which = event_target:enemy_turn }
			subtract_variable = { which = combat_hp which = temp }
			set_variable = { which = temp value = 0 }
		}
		set_variable = { which = temp value = 0 }
		# Status effects
		if = {
			limit = { has_character_flag = attack_morale_1 }
			event_target:enemy_turn = {
				subtract_variable = { which = combat_morale value = 1 }
			}
		}
		if = {
			limit = { has_character_flag = attack_morale_2 }
			event_target:enemy_turn = {
				subtract_variable = { which = combat_morale value = 2 }
			}
		}
		if = {
			limit = { has_character_flag = attack_morale_3 }
			event_target:enemy_turn = {
				subtract_variable = { which = combat_morale value = 3 }
			}
		}
		if = {
			limit = { has_character_flag = attack_pain }
			event_target:enemy_turn = {
				set_character_flag = status_pain
			}
		}
		if = {
			limit = { has_character_flag = attack_wound }
			event_target:enemy_turn = {
				set_character_flag = status_high_wound
			}
		}
		if = {
			limit = { has_character_flag = attack_maim }
			event_target:enemy_turn = {
				set_character_flag = status_high_maim
			}
		}
		# Morale damage from werewolf nobility
		if = {
			limit = { any_owned_bloodline = { has_bloodline_flag = werewolf_challenge_morale } }
			event_target:enemy_turn = {
				subtract_variable = { which = combat_morale value = 1 }
			}
		}
		
		# Alert characters
		event_target:enemy_turn = {
			character_event = { id = CHALLENGE.40 }
		}
		character_event = { id = CHALLENGE.41 }
	}
}

# CHALLENGE.79 - Merged with Challenge.78

# CHALLENGE.80 - Inform character of injury
character_event = {
	id = CHALLENGE.80
	desc = EVTDESC_CHALLENGE.80
	picture = GFX_evt_bloody_tools
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.80
		if = {
			limit = { has_character_flag = status_gain_wound }
			add_wounded_effect = yes
		}
		if = {
			limit = { has_character_flag = status_gain_maim }
			add_trait = maimed
		}
		if = {
			limit = { has_character_flag = status_gain_one_eyed }
			add_trait = one_eyed
			add_trait = severely_injured 
			resolve_severely_injured_effect = yes
		}
		if = {
			limit = { has_character_flag = status_gain_one_handed }
			add_trait = one_handed
			add_trait = severely_injured 
			resolve_severely_injured_effect = yes
		}
		if = {
			limit = { has_character_flag = status_gain_one_legged }
			add_trait = one_legged
			add_trait = severely_injured 
			resolve_severely_injured_effect = yes
		}
		if = {
			limit = { has_character_flag = status_gain_disfigured }
			add_trait = disfigured
			add_trait = severely_injured 
			resolve_severely_injured_effect = yes
		}
		if = {
			limit = { has_character_flag = status_gain_mangled }
			add_trait = mangled
			add_trait = severely_injured 
			resolve_severely_injured_effect = yes
		}
		if = {
			limit = { has_character_flag = gain_black_eye }
			add_character_modifier = {
				modifier = black_eye
				months = 10
			}
		}
		if = {
			limit = { has_character_flag = gain_badly_bruised }
			add_character_modifier = {
				modifier = badly_bruised
				months = 10
			}
		}
		if = {
			limit = { has_character_flag = gain_swollen_wrist }
			add_character_modifier = {
				modifier = swollen_wrist
				months = 10
			}
		}
		if = {
			limit = { has_character_flag = gain_swollen_ankle }
			add_character_modifier = {
				modifier = swollen_ankle
				months = 10
			}
		}
		if = {
			limit = { has_character_flag = gain_sore_muscles }
			add_character_modifier = {
				modifier = sore_muscles
				months = 10
			}
		}
		if = {
			limit = { has_character_flag = gain_concussion }
			add_character_modifier = {
				modifier = concussion
				months = 10
			}
		}
	}
}

# CHALLENGE.81 - Inform challengers - both lost
character_event = {
	id = CHALLENGE.81
	desc = EVTDESC_CHALLENGE.81
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.81
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[challenger.GetTitledName] and [challenged_party.GetTitledName] both lost."
		random_list = {
			3 = {} # Get off scott-free
			1 = {
				death = { death_reason = death_duel }
			}
			16 = {
				modifier = {
					factor = 0 
					trait = wounded
				}
				add_wounded_effect = yes
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						trait = maimed
						has_dlc = "Reapers"
					}
				}
				add_trait = maimed
			}
			2 = {
				modifier = {
					factor = 0
					OR = {
						NOT = { has_dlc = Reapers }
						trait = one_eyed
					}
				}
				add_trait = one_eyed
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			2 = {
				modifier = {
					factor = 0
					OR = {
						NOT = { has_dlc = Reapers }
						trait = one_handed
					}
				}
				add_trait = one_handed
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			2 = {
				modifier = {
					factor = 0
					OR = {
						NOT = { has_dlc = Reapers }
						trait = one_legged
					}
				}
				add_trait = one_legged
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			2 = {
				modifier = {
					factor = 0
					OR = {
						NOT = { has_dlc = Reapers }
						trait = disfigured
					}
				}
				add_trait = disfigured
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			2 = {
				modifier = {
					factor = 0
					OR = {
						NOT = { has_dlc = Reapers }
						trait = mangled
					}
				}
				add_trait = mangled
				add_trait = severely_injured 
				resolve_severely_injured_effect = yes
			}
			10 = { apply_random_minor_injury_effect = yes }
		}
	}
}

# CHALLENGE.82 - Unrelated loss of title
character_event = {
	id = CHALLENGE.82
	desc = EVTDESC_CHALLENGE.82
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		hidden_tooltip = { clr_global_flag = ongoing_werewolf_challenge }
		log = "[challenger.GetTitledName]'s challenge ended because [challenged_party.GetTitledName] lost their title."
		name = EVTOPTA_CHALLENGE.82
		hidden_tooltip = {
			event_target:challenger = {
				if = {
					limit = { NOT = { character = ROOT } }
					character_event = { id = CHALLENGE.83 }
				}
			}
			event_target:champion = {
				if = {
					limit = { NOT = { character = ROOT } }
					character_event = { id = CHALLENGE.83 }
				}
			}
		}
	}
}

# CHALLENGE.83 - Unrelated loss of title - fighters
character_event = {
	id = CHALLENGE.83
	desc = EVTDESC_CHALLENGE.83
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.82
	}
}

# CHALLENGE.84 - Reward a loyal champion
character_event = {
	id = CHALLENGE.84
	desc = EVTDESC_CHALLENGE.84
	picture = GFX_evt_son_asking_father
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.84
		transfer_scaled_wealth = { to = event_target:champion value = 0.2 }
		hidden_tooltip = {
			event_target:champion = {
				character_event = { id = CHALLENGE.85 }
			}
		}
	}
	
	option = {
		name = EVTOPTB_CHALLENGE.84
		trigger = { trait = gregarious }
		tooltip_info = gregarious
		any_vassal = {
			limit = { NOT = { trait = craven } }
			reverse_opinion = { who = event_target:champion modifier = opinion_impressed years = 2 }
		}
		hidden_tooltip = {
			event_target:champion = {
				character_event = { id = CHALLENGE.86 }
			}
		}
	}
	
	option = {
		name = EVTOPTC_CHALLENGE.84
		reverse_opinion = { who = event_target:champion modifier = not_feeling_apreciated }
	}
}

# CHALLENGE.85 - Champion received gold
character_event = {
	id = CHALLENGE.85
	desc = EVTDESC_CHALLENGE.85
	picture = GFX_evt_relaxed_ruler
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	ai = no
	
	option = {
		name = EVTOPTA_CHALLENGE.85
		tooltip = {
			transfer_scaled_wealth = { from = FROM value = 0.2 }
		}
	}
}

# CHALLENGE.86 - Champion received praise
character_event = {
	id = CHALLENGE.86
	desc = EVTDESC_CHALLENGE.86
	picture = GFX_evt_relaxed_ruler
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_CHALLENGE.85
		prestige = 30
		tooltip = {
			FROM = {
				any_vassal = {
					limit = { NOT = { trait = craven } }
					reverse_opinion = { who = event_target:champion modifier = opinion_impressed years = 2 }
				}
			}
		}
	}
}

# CHALLENGE.87 - First Turn - Low control takes time to shapeshift
character_event = {
	id = CHALLENGE.87
	desc = EVTDESC_CHALLENGE.87
	picture = GFX_evt_werewolf_shadowed
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Take the whole turn to shapeshift
	option = {
		name = EVTOPTA_CHALLENGE.87
		custom_tooltip = {
			text = tt_lose_shapeshift_penalty
			hidden_tooltip = {
				clr_character_flag = not_shapeshifted
				set_character_flag = choice_shapeshift
			}
		}
		if = {
			limit = { trait = secret_werewolf }
			add_trait = known_werewolf
			hidden_tooltip = {
				remove_character_modifier = known_monster
				remove_trait = secret_werewolf
			}
		}
		if = {
			limit = { check_variable = { which = control value <= 3 } }
			random = {
				chance = 10
				increase_control = yes
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 2
				trait = strategist
			}
		}
	}
	# Keep fighting
	option = {
		name = EVTOPTB_CHALLENGE.87
		hidden_tooltip = {
			set_character_flag = choice_normal_attack
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = wroth
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:second_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			character_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}
# CHALLENGE.88 - Second Turn - Low control takes time to shapeshift
character_event = {
	id = CHALLENGE.88
	desc = EVTDESC_CHALLENGE.87
	picture = GFX_evt_werewolf_shadowed
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	# Take the whole turn to shapeshift
	option = {
		name = EVTOPTA_CHALLENGE.87
		custom_tooltip = {
			text = tt_lose_shapeshift_penalty
			hidden_tooltip = {
				clr_character_flag = not_shapeshifted
				set_character_flag = choice_shapeshift
			}
		}
		if = {
			limit = { trait = secret_werewolf }
			add_trait = known_werewolf
			hidden_tooltip = {
				remove_character_modifier = known_monster
				remove_trait = secret_werewolf
			}
		}
		if = {
			limit = { check_variable = { which = control value <= 3 } }
			random = {
				chance = 10
				increase_control = yes
			}
		}
		ai_chance = {
			factor = 2
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 2
				trait = strategist
			}
		}
	}
	# Keep fighting
	option = {
		name = EVTOPTB_CHALLENGE.87
		hidden_tooltip = {
			set_character_flag = choice_normal_attack
		}
		custom_tooltip = {
			text = TT_attack_normal
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = wroth
			}
		}
	}
	
	after = {
		hidden_tooltip = {
			# Set turn variables
			event_target:first_turn = { save_event_target_as = enemy_turn }
			# Call event to calculate turn result
			character_event = { id = CHALLENGE.78 days = 1 }
		}
	}
}
# CHALLENGE.89 - Champion is asked to be champion
character_event = {
	id = CHALLENGE.89
	desc = EVTDESC_CHALLENGE.9
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	hide_from = yes
	
	# Become champion
	option = {
		name = EVTOPTA_CHALLENGE.9
		log = "[Root.GetTitledName] will champion for [challenged_party.GetTitledName]."
		custom_tooltip = { text = TT_champion_liege }
		hidden_tooltip = {
			save_event_target_as = champion
			event_target:challenged_party = { 
				set_character_flag = defending_party
				clr_character_flag = asked_champion
				character_event = { id = CHALLENGE.24 days = 1 }
			}
		}
		ai_chance = {
			factor = 20
			additive_opinion_modifier = {
				factor = 0.7
				who = liege
			}
			modifier = {
				factor = 1.5
				ai_honor = 40
			}
			modifier = {
				factor = 1.5
				ai_honor = 80
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				health = 10
			}
			modifier = {
				factor = 2
				combat_rating = 5
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				regent = {
					is_incapable = no
					prisoner = no
				}
			}
		}
		name = EVTOPTE_CHALLENGE.9
		liege = { regent = { character_event = { id = CHALLENGE.9 days = 1 } } }
		remove_title = title_champion
		prestige = -50
		liege = { opinion = { who = ROOT modifier = opinion_dishonorable years = 5 } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				NOT = {
					regent = {
						is_incapable = no
						prisoner = no
					}
				}
				father = { 
					same_realm = PREV
					is_incapable = no
					prisoner = no
				}
				NOT = { age = 16 }
			}
		}
		name = EVTOPTB_CHALLENGE.9
		liege = { father = { character_event = { id = CHALLENGE.10 days = 1 } } }
		remove_title = title_champion
		prestige = -50
		liege = { opinion = { who = ROOT modifier = opinion_dishonorable years = 5 } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				NOT = {
					regent = {
						is_incapable = no
						prisoner = no
					}
				}
				father = { 
					OR = {
						NOT = { same_realm = PREV }
						is_incapable = yes
						prisoner = yes
					}
				}
				mother = { same_realm = PREV }
				NOT = { age = 16 }
			}
		}
		name = EVTOPTC_CHALLENGE.9
		liege = { mother = { character_event = { id = CHALLENGE.9 days = 1 } } }
		remove_title = title_champion
		prestige = -50
		liege = { opinion = { who = ROOT modifier = opinion_dishonorable years = 5 } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
	
	option = {
		trigger = {
			liege = {
				NOT = {
					regent = {
						is_incapable = no
						prisoner = no
					}
				}
				OR = {
					AND = {
						father = { 
							OR = {
								NOT = { same_realm = PREV }
								is_incapable = yes
								prisoner = yes
							}
						}
						mother = { OR = {
								NOT = { same_realm = PREV }
								is_incapable = yes
								prisoner = yes
							}
						}
					}
					age = 16
				}
			}
		}
		name = EVTOPTD_CHALLENGE.9
		hidden_tooltip = {
			liege = { character_event = { id = CHALLENGE.11 days = 1 } }
		}
		remove_title = title_champion
		prestige = -50
		liege = { opinion = { who = ROOT modifier = opinion_dishonorable years = 5 } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				NOT = { ai_honor = 0 }
			}
			modifier = {
				factor = 2
				NOT = { culture = werewolf_culture }
			}
			modifier = {
				factor = 3
				NOT = { trait = werewolf }
			}
			modifier = {
				factor = 3
				trait = craven
			}
			modifier = {
				factor = 2
				NOT = { health = 5 }
			}
			modifier = {
				factor = 2
				NOT = { combat_rating = 2 }
			}
		}
	}
}

# Clear werewolf challenge global flag after 6 months, so be sure
# Currently unused, as the stability issue where I needed to avoid multiple AI challenges at once was fixed
character_event = {
	id = CHALLENGE.90
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		clr_global_flag = ongoing_werewolf_challenge
	}
}